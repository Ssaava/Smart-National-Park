
course work.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c2  00800200  000011e0  00001274  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008002c2  008002c2  00001336  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001336  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001394  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  000013d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017b1  00000000  00000000  00001424  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d7d  00000000  00000000  00002bd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000730  00000000  00000000  00003952  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  00004084  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000706  00000000  00000000  000041b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009a7  00000000  00000000  000048be  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00005265  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	9e c0       	rjmp	.+316    	; 0x13e <__ctors_end>
       2:	00 00       	nop
       4:	6c c3       	rjmp	.+1752   	; 0x6de <__vector_1>
       6:	00 00       	nop
       8:	ba c0       	rjmp	.+372    	; 0x17e <__bad_interrupt>
       a:	00 00       	nop
       c:	b8 c0       	rjmp	.+368    	; 0x17e <__bad_interrupt>
       e:	00 00       	nop
      10:	b6 c0       	rjmp	.+364    	; 0x17e <__bad_interrupt>
      12:	00 00       	nop
      14:	b4 c0       	rjmp	.+360    	; 0x17e <__bad_interrupt>
      16:	00 00       	nop
      18:	b2 c0       	rjmp	.+356    	; 0x17e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b0 c0       	rjmp	.+352    	; 0x17e <__bad_interrupt>
      1e:	00 00       	nop
      20:	ae c0       	rjmp	.+348    	; 0x17e <__bad_interrupt>
      22:	00 00       	nop
      24:	ac c0       	rjmp	.+344    	; 0x17e <__bad_interrupt>
      26:	00 00       	nop
      28:	aa c0       	rjmp	.+340    	; 0x17e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	a8 c0       	rjmp	.+336    	; 0x17e <__bad_interrupt>
      2e:	00 00       	nop
      30:	a6 c0       	rjmp	.+332    	; 0x17e <__bad_interrupt>
      32:	00 00       	nop
      34:	a4 c0       	rjmp	.+328    	; 0x17e <__bad_interrupt>
      36:	00 00       	nop
      38:	a2 c0       	rjmp	.+324    	; 0x17e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a0 c0       	rjmp	.+320    	; 0x17e <__bad_interrupt>
      3e:	00 00       	nop
      40:	9e c0       	rjmp	.+316    	; 0x17e <__bad_interrupt>
      42:	00 00       	nop
      44:	9c c0       	rjmp	.+312    	; 0x17e <__bad_interrupt>
      46:	00 00       	nop
      48:	9a c0       	rjmp	.+308    	; 0x17e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	98 c0       	rjmp	.+304    	; 0x17e <__bad_interrupt>
      4e:	00 00       	nop
      50:	96 c0       	rjmp	.+300    	; 0x17e <__bad_interrupt>
      52:	00 00       	nop
      54:	94 c0       	rjmp	.+296    	; 0x17e <__bad_interrupt>
      56:	00 00       	nop
      58:	92 c0       	rjmp	.+292    	; 0x17e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	90 c0       	rjmp	.+288    	; 0x17e <__bad_interrupt>
      5e:	00 00       	nop
      60:	8e c0       	rjmp	.+284    	; 0x17e <__bad_interrupt>
      62:	00 00       	nop
      64:	8c c0       	rjmp	.+280    	; 0x17e <__bad_interrupt>
      66:	00 00       	nop
      68:	8a c0       	rjmp	.+276    	; 0x17e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	88 c0       	rjmp	.+272    	; 0x17e <__bad_interrupt>
      6e:	00 00       	nop
      70:	86 c0       	rjmp	.+268    	; 0x17e <__bad_interrupt>
      72:	00 00       	nop
      74:	84 c0       	rjmp	.+264    	; 0x17e <__bad_interrupt>
      76:	00 00       	nop
      78:	82 c0       	rjmp	.+260    	; 0x17e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	80 c0       	rjmp	.+256    	; 0x17e <__bad_interrupt>
      7e:	00 00       	nop
      80:	7e c0       	rjmp	.+252    	; 0x17e <__bad_interrupt>
      82:	00 00       	nop
      84:	7c c0       	rjmp	.+248    	; 0x17e <__bad_interrupt>
      86:	00 00       	nop
      88:	7a c0       	rjmp	.+244    	; 0x17e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	78 c0       	rjmp	.+240    	; 0x17e <__bad_interrupt>
      8e:	00 00       	nop
      90:	76 c0       	rjmp	.+236    	; 0x17e <__bad_interrupt>
      92:	00 00       	nop
      94:	74 c0       	rjmp	.+232    	; 0x17e <__bad_interrupt>
      96:	00 00       	nop
      98:	72 c0       	rjmp	.+228    	; 0x17e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	70 c0       	rjmp	.+224    	; 0x17e <__bad_interrupt>
      9e:	00 00       	nop
      a0:	6e c0       	rjmp	.+220    	; 0x17e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	6c c0       	rjmp	.+216    	; 0x17e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	6a c0       	rjmp	.+212    	; 0x17e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	68 c0       	rjmp	.+208    	; 0x17e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	66 c0       	rjmp	.+204    	; 0x17e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	64 c0       	rjmp	.+200    	; 0x17e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	62 c0       	rjmp	.+196    	; 0x17e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	60 c0       	rjmp	.+192    	; 0x17e <__bad_interrupt>
      be:	00 00       	nop
      c0:	5e c0       	rjmp	.+188    	; 0x17e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	5c c0       	rjmp	.+184    	; 0x17e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	5a c0       	rjmp	.+180    	; 0x17e <__bad_interrupt>
      ca:	00 00       	nop
      cc:	58 c0       	rjmp	.+176    	; 0x17e <__bad_interrupt>
      ce:	00 00       	nop
      d0:	56 c0       	rjmp	.+172    	; 0x17e <__bad_interrupt>
      d2:	00 00       	nop
      d4:	54 c0       	rjmp	.+168    	; 0x17e <__bad_interrupt>
      d6:	00 00       	nop
      d8:	52 c0       	rjmp	.+164    	; 0x17e <__bad_interrupt>
      da:	00 00       	nop
      dc:	50 c0       	rjmp	.+160    	; 0x17e <__bad_interrupt>
      de:	00 00       	nop
      e0:	4e c0       	rjmp	.+156    	; 0x17e <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 00       	.word	0x0008	; ????
      e6:	00 00       	nop
      e8:	be 92       	st	-X, r11
      ea:	24 49       	sbci	r18, 0x94	; 148
      ec:	12 3e       	cpi	r17, 0xE2	; 226
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	be cd       	rjmp	.-1156   	; 0xfffffc70 <__eeprom_end+0xff7efc70>
      f4:	cc cc       	rjmp	.-1640   	; 0xfffffa8e <__eeprom_end+0xff7efa8e>
      f6:	4c 3e       	cpi	r20, 0xEC	; 236
      f8:	00 00       	nop
      fa:	00 80       	ld	r0, Z
      fc:	be ab       	std	Y+54, r27	; 0x36
      fe:	aa aa       	std	Y+50, r10	; 0x32
     100:	aa 3e       	cpi	r26, 0xEA	; 234
     102:	00 00       	nop
     104:	00 00       	nop
     106:	bf 00       	.word	0x00bf	; ????
     108:	00 00       	nop
     10a:	80 3f       	cpi	r24, 0xF0	; 240
     10c:	00 00       	nop
     10e:	00 00       	nop
     110:	00 08       	sbc	r0, r0
     112:	41 78       	andi	r20, 0x81	; 129
     114:	d3 bb       	out	0x13, r29	; 19
     116:	43 87       	std	Z+11, r20	; 0x0b
     118:	d1 13       	cpse	r29, r17
     11a:	3d 19       	sub	r19, r13
     11c:	0e 3c       	cpi	r16, 0xCE	; 206
     11e:	c3 bd       	out	0x23, r28	; 35
     120:	42 82       	std	Z+2, r4	; 0x02
     122:	ad 2b       	or	r26, r29
     124:	3e 68       	ori	r19, 0x8E	; 142
     126:	ec 82       	std	Y+4, r14	; 0x04
     128:	76 be       	out	0x36, r7	; 54
     12a:	d9 8f       	std	Y+25, r29	; 0x19
     12c:	e1 a9       	ldd	r30, Z+49	; 0x31
     12e:	3e 4c       	sbci	r19, 0xCE	; 206
     130:	80 ef       	ldi	r24, 0xF0	; 240
     132:	ff be       	out	0x3f, r15	; 63
     134:	01 c4       	rjmp	.+2050   	; 0x938 <__floatsisf+0x50>
     136:	ff 7f       	andi	r31, 0xFF	; 255
     138:	3f 00       	.word	0x003f	; ????
     13a:	00 00       	nop
	...

0000013e <__ctors_end>:
     13e:	11 24       	eor	r1, r1
     140:	1f be       	out	0x3f, r1	; 63
     142:	cf ef       	ldi	r28, 0xFF	; 255
     144:	d1 e2       	ldi	r29, 0x21	; 33
     146:	de bf       	out	0x3e, r29	; 62
     148:	cd bf       	out	0x3d, r28	; 61
     14a:	00 e0       	ldi	r16, 0x00	; 0
     14c:	0c bf       	out	0x3c, r16	; 60

0000014e <__do_copy_data>:
     14e:	12 e0       	ldi	r17, 0x02	; 2
     150:	a0 e0       	ldi	r26, 0x00	; 0
     152:	b2 e0       	ldi	r27, 0x02	; 2
     154:	e0 ee       	ldi	r30, 0xE0	; 224
     156:	f1 e1       	ldi	r31, 0x11	; 17
     158:	00 e0       	ldi	r16, 0x00	; 0
     15a:	0b bf       	out	0x3b, r16	; 59
     15c:	02 c0       	rjmp	.+4      	; 0x162 <__do_copy_data+0x14>
     15e:	07 90       	elpm	r0, Z+
     160:	0d 92       	st	X+, r0
     162:	a2 3c       	cpi	r26, 0xC2	; 194
     164:	b1 07       	cpc	r27, r17
     166:	d9 f7       	brne	.-10     	; 0x15e <__do_copy_data+0x10>

00000168 <__do_clear_bss>:
     168:	22 e0       	ldi	r18, 0x02	; 2
     16a:	a2 ec       	ldi	r26, 0xC2	; 194
     16c:	b2 e0       	ldi	r27, 0x02	; 2
     16e:	01 c0       	rjmp	.+2      	; 0x172 <.do_clear_bss_start>

00000170 <.do_clear_bss_loop>:
     170:	1d 92       	st	X+, r1

00000172 <.do_clear_bss_start>:
     172:	a8 3c       	cpi	r26, 0xC8	; 200
     174:	b2 07       	cpc	r27, r18
     176:	e1 f7       	brne	.-8      	; 0x170 <.do_clear_bss_loop>
     178:	e6 d0       	rcall	.+460    	; 0x346 <main>
     17a:	0c 94 ee 08 	jmp	0x11dc	; 0x11dc <_exit>

0000017e <__bad_interrupt>:
     17e:	40 cf       	rjmp	.-384    	; 0x0 <__vectors>

00000180 <_Z5latchv>:
	int touristAbove10;
	int plateNo;
};

void latch(){
	PORTG &= ~(1 << PG5);
     180:	84 b3       	in	r24, 0x14	; 20
     182:	8f 7d       	andi	r24, 0xDF	; 223
     184:	84 bb       	out	0x14, r24	; 20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     186:	83 ec       	ldi	r24, 0xC3	; 195
     188:	99 e0       	ldi	r25, 0x09	; 9
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <_Z5latchv+0xa>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <_Z5latchv+0x10>
     190:	00 00       	nop
	_delay_ms(10);
	PORTG |= (1 << PG5);
     192:	84 b3       	in	r24, 0x14	; 20
     194:	80 62       	ori	r24, 0x20	; 32
     196:	84 bb       	out	0x14, r24	; 20
     198:	83 ec       	ldi	r24, 0xC3	; 195
     19a:	99 e0       	ldi	r25, 0x09	; 9
     19c:	01 97       	sbiw	r24, 0x01	; 1
     19e:	f1 f7       	brne	.-4      	; 0x19c <_Z5latchv+0x1c>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <_Z5latchv+0x22>
     1a2:	00 00       	nop
     1a4:	08 95       	ret

000001a6 <_Z14displayMessagePci>:
	_delay_ms(10);
}



void displayMessage(char message[], int row){
     1a6:	ef 92       	push	r14
     1a8:	ff 92       	push	r15
     1aa:	0f 93       	push	r16
     1ac:	1f 93       	push	r17
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
     1b2:	00 d0       	rcall	.+0      	; 0x1b4 <_Z14displayMessagePci+0xe>
     1b4:	1f 92       	push	r1
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
     1ba:	7c 01       	movw	r14, r24
     1bc:	8b 01       	movw	r16, r22
	char rows[] = {0x80, 0xC0, 0x90, 0xD0};
     1be:	80 e8       	ldi	r24, 0x80	; 128
     1c0:	89 83       	std	Y+1, r24	; 0x01
     1c2:	80 ec       	ldi	r24, 0xC0	; 192
     1c4:	8a 83       	std	Y+2, r24	; 0x02
     1c6:	80 e9       	ldi	r24, 0x90	; 144
     1c8:	8b 83       	std	Y+3, r24	; 0x03
     1ca:	80 ed       	ldi	r24, 0xD0	; 208
     1cc:	8c 83       	std	Y+4, r24	; 0x04
	
	PORTG &= ~(1 << PG3); //command mode
     1ce:	84 b3       	in	r24, 0x14	; 20
     1d0:	87 7f       	andi	r24, 0xF7	; 247
     1d2:	84 bb       	out	0x14, r24	; 20
	latch();
     1d4:	d5 df       	rcall	.-86     	; 0x180 <_Z5latchv>
	
	
	PORTH = 0b00000001; //clear screen
     1d6:	81 e0       	ldi	r24, 0x01	; 1
     1d8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
	latch();
     1dc:	d1 df       	rcall	.-94     	; 0x180 <_Z5latchv>
	
	PORTG = rows[row];
     1de:	e1 e0       	ldi	r30, 0x01	; 1
     1e0:	f0 e0       	ldi	r31, 0x00	; 0
     1e2:	ec 0f       	add	r30, r28
     1e4:	fd 1f       	adc	r31, r29
     1e6:	e0 0f       	add	r30, r16
     1e8:	f1 1f       	adc	r31, r17
     1ea:	80 81       	ld	r24, Z
	latch();
     1ec:	84 bb       	out	0x14, r24	; 20
     1ee:	c8 df       	rcall	.-112    	; 0x180 <_Z5latchv>
	
	
	PORTG |= (1 << PG3); //data mode
     1f0:	84 b3       	in	r24, 0x14	; 20
     1f2:	88 60       	ori	r24, 0x08	; 8
     1f4:	84 bb       	out	0x14, r24	; 20
	PORTG &= ~(1 << PG4); //write mode
     1f6:	84 b3       	in	r24, 0x14	; 20
     1f8:	8f 7e       	andi	r24, 0xEF	; 239
	
	latch();
     1fa:	84 bb       	out	0x14, r24	; 20
     1fc:	c1 df       	rcall	.-126    	; 0x180 <_Z5latchv>
	int i;
	
	for (i = 0; message[i] != '\0'; i++)
     1fe:	00 e0       	ldi	r16, 0x00	; 0
     200:	10 e0       	ldi	r17, 0x00	; 0
     202:	f7 01       	movw	r30, r14
     204:	e0 0f       	add	r30, r16
     206:	f1 1f       	adc	r31, r17
     208:	80 81       	ld	r24, Z
     20a:	88 23       	and	r24, r24
	{
		PORTH = message[i];
     20c:	31 f0       	breq	.+12     	; 0x21a <_Z14displayMessagePci+0x74>
     20e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
		latch();
     212:	b6 df       	rcall	.-148    	; 0x180 <_Z5latchv>
	PORTG &= ~(1 << PG4); //write mode
	
	latch();
	int i;
	
	for (i = 0; message[i] != '\0'; i++)
     214:	0f 5f       	subi	r16, 0xFF	; 255
     216:	1f 4f       	sbci	r17, 0xFF	; 255
     218:	f4 cf       	rjmp	.-24     	; 0x202 <_Z14displayMessagePci+0x5c>
	{
		PORTH = message[i];
		latch();
	}
}
     21a:	0f 90       	pop	r0
     21c:	0f 90       	pop	r0
     21e:	0f 90       	pop	r0
     220:	0f 90       	pop	r0
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	0f 91       	pop	r16
     22a:	ff 90       	pop	r15
     22c:	ef 90       	pop	r14
     22e:	08 95       	ret

00000230 <_Z16openAndCloseGatev>:

void openAndCloseGate(){
	//open gate
	displayMessage("OPENING GATE", 0);
     230:	60 e0       	ldi	r22, 0x00	; 0
     232:	70 e0       	ldi	r23, 0x00	; 0
     234:	82 e0       	ldi	r24, 0x02	; 2
     236:	92 e0       	ldi	r25, 0x02	; 2
     238:	b6 df       	rcall	.-148    	; 0x1a6 <_Z14displayMessagePci>
	PORTF = 0b00000010;
     23a:	82 e0       	ldi	r24, 0x02	; 2
     23c:	81 bb       	out	0x11, r24	; 17
     23e:	2f e7       	ldi	r18, 0x7F	; 127
     240:	8a e1       	ldi	r24, 0x1A	; 26
     242:	96 e0       	ldi	r25, 0x06	; 6
     244:	21 50       	subi	r18, 0x01	; 1
     246:	80 40       	sbci	r24, 0x00	; 0
     248:	90 40       	sbci	r25, 0x00	; 0
     24a:	e1 f7       	brne	.-8      	; 0x244 <_Z16openAndCloseGatev+0x14>
     24c:	00 c0       	rjmp	.+0      	; 0x24e <_Z16openAndCloseGatev+0x1e>
     24e:	00 00       	nop
	_delay_ms(2000);
	
	//open gate
	displayMessage("CLOSING GATE", 0);
     250:	60 e0       	ldi	r22, 0x00	; 0
     252:	70 e0       	ldi	r23, 0x00	; 0
     254:	8f e0       	ldi	r24, 0x0F	; 15
     256:	92 e0       	ldi	r25, 0x02	; 2
     258:	a6 df       	rcall	.-180    	; 0x1a6 <_Z14displayMessagePci>
	PORTF = 0b00000001;
     25a:	81 e0       	ldi	r24, 0x01	; 1
     25c:	81 bb       	out	0x11, r24	; 17
     25e:	2f e7       	ldi	r18, 0x7F	; 127
     260:	8a e1       	ldi	r24, 0x1A	; 26
     262:	96 e0       	ldi	r25, 0x06	; 6
     264:	21 50       	subi	r18, 0x01	; 1
     266:	80 40       	sbci	r24, 0x00	; 0
     268:	90 40       	sbci	r25, 0x00	; 0
     26a:	e1 f7       	brne	.-8      	; 0x264 <_Z16openAndCloseGatev+0x34>
     26c:	00 c0       	rjmp	.+0      	; 0x26e <_Z16openAndCloseGatev+0x3e>
     26e:	00 00       	nop
	
	_delay_ms(2000);
	PORTF = 0x00;
     270:	11 ba       	out	0x11, r1	; 17
     272:	08 95       	ret

00000274 <_Z10displayNumi>:
}

void displayNum(int num){
     274:	cf 92       	push	r12
     276:	df 92       	push	r13
     278:	ef 92       	push	r14
     27a:	ff 92       	push	r15
     27c:	0f 93       	push	r16
     27e:	1f 93       	push	r17
     280:	cf 93       	push	r28
     282:	df 93       	push	r29
     284:	cd b7       	in	r28, 0x3d	; 61
     286:	de b7       	in	r29, 0x3e	; 62
     288:	7c 01       	movw	r14, r24
	
	char display[100];

	displayMessage(numStr, 0); // Display the updated inputNum
	_delay_ms(1000);
}
     28a:	cd b6       	in	r12, 0x3d	; 61
     28c:	de b6       	in	r13, 0x3e	; 62
	_delay_ms(2000);
	PORTF = 0x00;
}

void displayNum(int num){
	int numLen = (int)((ceil(log10(num)) + 1) * sizeof(char));
     28e:	bc 01       	movw	r22, r24
     290:	99 0f       	add	r25, r25
     292:	88 0b       	sbc	r24, r24
     294:	99 0b       	sbc	r25, r25
     296:	28 d3       	rcall	.+1616   	; 0x8e8 <__floatsisf>
     298:	f3 d3       	rcall	.+2022   	; 0xa80 <log10>
     29a:	e0 d2       	rcall	.+1472   	; 0x85c <ceil>
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	30 e0       	ldi	r19, 0x00	; 0
     2a0:	40 e8       	ldi	r20, 0x80	; 128
     2a2:	5f e3       	ldi	r21, 0x3F	; 63
     2a4:	77 d2       	rcall	.+1262   	; 0x794 <__addsf3>
     2a6:	ed d2       	rcall	.+1498   	; 0x882 <__fixsfsi>

	char numStr[numLen];
     2a8:	2d b7       	in	r18, 0x3d	; 61
     2aa:	3e b7       	in	r19, 0x3e	; 62
     2ac:	26 1b       	sub	r18, r22
     2ae:	37 0b       	sbc	r19, r23
     2b0:	0f b6       	in	r0, 0x3f	; 63
     2b2:	f8 94       	cli
     2b4:	3e bf       	out	0x3e, r19	; 62
     2b6:	0f be       	out	0x3f, r0	; 63
     2b8:	2d bf       	out	0x3d, r18	; 61
     2ba:	0d b7       	in	r16, 0x3d	; 61
     2bc:	1e b7       	in	r17, 0x3e	; 62
     2be:	0f 5f       	subi	r16, 0xFF	; 255
     2c0:	1f 4f       	sbci	r17, 0xFF	; 255
	sprintf(numStr, "%d", num); // Convert only the updated inputNum to a string
     2c2:	ff 92       	push	r15
     2c4:	ef 92       	push	r14
     2c6:	8c e1       	ldi	r24, 0x1C	; 28
     2c8:	92 e0       	ldi	r25, 0x02	; 2
     2ca:	9f 93       	push	r25
     2cc:	8f 93       	push	r24
     2ce:	1f 93       	push	r17
     2d0:	0f 93       	push	r16
	
	char display[100];

	displayMessage(numStr, 0); // Display the updated inputNum
     2d2:	a9 d4       	rcall	.+2386   	; 0xc26 <sprintf>
     2d4:	60 e0       	ldi	r22, 0x00	; 0
     2d6:	70 e0       	ldi	r23, 0x00	; 0
     2d8:	80 2f       	mov	r24, r16
     2da:	91 2f       	mov	r25, r17
     2dc:	64 df       	rcall	.-312    	; 0x1a6 <_Z14displayMessagePci>
     2de:	3f e3       	ldi	r19, 0x3F	; 63
     2e0:	8d e0       	ldi	r24, 0x0D	; 13
     2e2:	93 e0       	ldi	r25, 0x03	; 3
     2e4:	31 50       	subi	r19, 0x01	; 1
     2e6:	80 40       	sbci	r24, 0x00	; 0
     2e8:	90 40       	sbci	r25, 0x00	; 0
     2ea:	e1 f7       	brne	.-8      	; 0x2e4 <_Z10displayNumi+0x70>
     2ec:	00 c0       	rjmp	.+0      	; 0x2ee <_Z10displayNumi+0x7a>
     2ee:	00 00       	nop
	_delay_ms(1000);
}
     2f0:	0f 90       	pop	r0
     2f2:	0f 90       	pop	r0
     2f4:	0f 90       	pop	r0
     2f6:	0f 90       	pop	r0
     2f8:	0f 90       	pop	r0
     2fa:	0f 90       	pop	r0
     2fc:	0f b6       	in	r0, 0x3f	; 63
     2fe:	f8 94       	cli
     300:	de be       	out	0x3e, r13	; 62
     302:	0f be       	out	0x3f, r0	; 63
     304:	cd be       	out	0x3d, r12	; 61
     306:	df 91       	pop	r29
     308:	cf 91       	pop	r28
     30a:	1f 91       	pop	r17
     30c:	0f 91       	pop	r16
     30e:	ff 90       	pop	r15
     310:	ef 90       	pop	r14
     312:	df 90       	pop	r13
     314:	cf 90       	pop	r12
     316:	08 95       	ret

00000318 <_Z16recordAndDisplayi>:

void recordAndDisplay(int num) {
	inputNum = (inputNum * 10) + num; // Update inputNum
     318:	20 91 c6 02 	lds	r18, 0x02C6	; 0x8002c6 <inputNum>
     31c:	30 91 c7 02 	lds	r19, 0x02C7	; 0x8002c7 <inputNum+0x1>
     320:	a9 01       	movw	r20, r18
     322:	44 0f       	add	r20, r20
     324:	55 1f       	adc	r21, r21
     326:	22 0f       	add	r18, r18
     328:	33 1f       	adc	r19, r19
     32a:	22 0f       	add	r18, r18
     32c:	33 1f       	adc	r19, r19
     32e:	22 0f       	add	r18, r18
     330:	33 1f       	adc	r19, r19
     332:	24 0f       	add	r18, r20
     334:	35 1f       	adc	r19, r21
     336:	82 0f       	add	r24, r18
     338:	93 1f       	adc	r25, r19
     33a:	90 93 c7 02 	sts	0x02C7, r25	; 0x8002c7 <inputNum+0x1>
     33e:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <inputNum>
	
	displayNum(inputNum);
     342:	98 cf       	rjmp	.-208    	; 0x274 <_Z10displayNumi>
     344:	08 95       	ret

00000346 <main>:
}


int main(void)
{
     346:	cf 93       	push	r28
     348:	df 93       	push	r29
     34a:	cd b7       	in	r28, 0x3d	; 61
     34c:	de b7       	in	r29, 0x3e	; 62
     34e:	ec 97       	sbiw	r28, 0x3c	; 60
     350:	0f b6       	in	r0, 0x3f	; 63
     352:	f8 94       	cli
     354:	de bf       	out	0x3e, r29	; 62
     356:	0f be       	out	0x3f, r0	; 63
     358:	cd bf       	out	0x3d, r28	; 61
	//initiate the tourist cars
	struct TouristCar touristCars[CAPACITY];
	
    /* Replace with your application code */
	EIMSK |= (1 << INT0); //register the int 0 pin
     35a:	8d b3       	in	r24, 0x1d	; 29
     35c:	81 60       	ori	r24, 0x01	; 1
     35e:	8d bb       	out	0x1d, r24	; 29
	DDRJ = 0xff;
     360:	8f ef       	ldi	r24, 0xFF	; 255
     362:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x7c0104>
	DDRD = 0x00;
     366:	1a b8       	out	0x0a, r1	; 10
	DDRH = 0xff;
     368:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
	DDRG = 0xff;
     36c:	83 bb       	out	0x13, r24	; 19
	DDRF = 0xff;
     36e:	80 bb       	out	0x10, r24	; 16
	DDRK = 0b00000111;
     370:	87 e0       	ldi	r24, 0x07	; 7
     372:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
	
	sei();
     376:	78 94       	sei
	
	PORTG &= ~(1 << PG3); //command mode
     378:	84 b3       	in	r24, 0x14	; 20
     37a:	87 7f       	andi	r24, 0xF7	; 247
     37c:	84 bb       	out	0x14, r24	; 20
	PORTG &= ~(1 << PG4); //write mode
     37e:	84 b3       	in	r24, 0x14	; 20
     380:	8f 7e       	andi	r24, 0xEF	; 239
     382:	84 bb       	out	0x14, r24	; 20
	latch();
     384:	fd de       	rcall	.-518    	; 0x180 <_Z5latchv>
	
	
	PORTH = 0x0f; //display
     386:	8f e0       	ldi	r24, 0x0F	; 15
     388:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x7c0102>
	latch();
     38c:	f9 de       	rcall	.-526    	; 0x180 <_Z5latchv>
	
	inputNum = 0;
     38e:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <inputNum+0x1>
     392:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <inputNum>
	
    while (1) {
		//
		
		PORTK = 0b11111011;
     396:	8b ef       	ldi	r24, 0xFB	; 251
     398:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
		
		if ((PINK & 0b00001000) == 0)
     39c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     3a0:	83 fd       	sbrc	r24, 3
     3a2:	09 c0       	rjmp	.+18     	; 0x3b6 <main+0x70>
     3a4:	8b e7       	ldi	r24, 0x7B	; 123
     3a6:	92 e9       	ldi	r25, 0x92	; 146
     3a8:	01 97       	sbiw	r24, 0x01	; 1
     3aa:	f1 f7       	brne	.-4      	; 0x3a8 <main+0x62>
     3ac:	00 c0       	rjmp	.+0      	; 0x3ae <main+0x68>
     3ae:	00 00       	nop
		{ //1
			_delay_ms(150); // to avoid the bouncing contact point error
			recordAndDisplay(1);
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	b1 df       	rcall	.-158    	; 0x318 <_Z16recordAndDisplayi>
		}
		
		if ((PINK & 0b00010000) == 0)
     3b6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     3ba:	84 fd       	sbrc	r24, 4
     3bc:	09 c0       	rjmp	.+18     	; 0x3d0 <main+0x8a>
     3be:	8b e7       	ldi	r24, 0x7B	; 123
     3c0:	92 e9       	ldi	r25, 0x92	; 146
     3c2:	01 97       	sbiw	r24, 0x01	; 1
     3c4:	f1 f7       	brne	.-4      	; 0x3c2 <main+0x7c>
     3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <main+0x82>
		{ //4
			_delay_ms(150); // to avoid the bouncing contact point error
			recordAndDisplay(4);
     3c8:	00 00       	nop
     3ca:	84 e0       	ldi	r24, 0x04	; 4
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	a4 df       	rcall	.-184    	; 0x318 <_Z16recordAndDisplayi>
		}
		
		if ((PINK & 0b00100000) == 0)
     3d0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     3d4:	85 fd       	sbrc	r24, 5
     3d6:	09 c0       	rjmp	.+18     	; 0x3ea <main+0xa4>
     3d8:	8b e7       	ldi	r24, 0x7B	; 123
     3da:	92 e9       	ldi	r25, 0x92	; 146
     3dc:	01 97       	sbiw	r24, 0x01	; 1
     3de:	f1 f7       	brne	.-4      	; 0x3dc <main+0x96>
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <main+0x9c>
		{ //7
			_delay_ms(150); // to avoid the bouncing contact point error
			recordAndDisplay(7);
     3e2:	00 00       	nop
     3e4:	87 e0       	ldi	r24, 0x07	; 7
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	97 df       	rcall	.-210    	; 0x318 <_Z16recordAndDisplayi>
		}
		
		if ((PINK & 0b01000000) == 0)
     3ea:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     3ee:	86 fd       	sbrc	r24, 6
     3f0:	f1 c0       	rjmp	.+482    	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
     3f2:	8b e7       	ldi	r24, 0x7B	; 123
     3f4:	92 e9       	ldi	r25, 0x92	; 146
     3f6:	01 97       	sbiw	r24, 0x01	; 1
     3f8:	f1 f7       	brne	.-4      	; 0x3f6 <main+0xb0>
     3fa:	00 c0       	rjmp	.+0      	; 0x3fc <main+0xb6>
     3fc:	00 00       	nop
		{ //*
			_delay_ms(150); // to avoid the bouncing contact point error
			if(mode == 1){
     3fe:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <mode>
     402:	90 91 c5 02 	lds	r25, 0x02C5	; 0x8002c5 <mode+0x1>
     406:	81 30       	cpi	r24, 0x01	; 1
     408:	91 05       	cpc	r25, r1
     40a:	39 f5       	brne	.+78     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
				// record the number of tourist below 10 yrs
				touristCars[currentCapacity].touristBelow10 = inputNum;
     40c:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <__data_end>
     410:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <__data_end+0x1>
     414:	fc 01       	movw	r30, r24
     416:	ee 0f       	add	r30, r30
     418:	ff 1f       	adc	r31, r31
     41a:	e8 0f       	add	r30, r24
     41c:	f9 1f       	adc	r31, r25
     41e:	ee 0f       	add	r30, r30
     420:	ff 1f       	adc	r31, r31
     422:	41 e0       	ldi	r20, 0x01	; 1
     424:	50 e0       	ldi	r21, 0x00	; 0
     426:	4c 0f       	add	r20, r28
     428:	5d 1f       	adc	r21, r29
     42a:	e4 0f       	add	r30, r20
     42c:	f5 1f       	adc	r31, r21
     42e:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <inputNum>
     432:	90 91 c7 02 	lds	r25, 0x02C7	; 0x8002c7 <inputNum+0x1>
     436:	91 83       	std	Z+1, r25	; 0x01
     438:	80 83       	st	Z, r24
				inputNum = 0;
     43a:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <inputNum+0x1>
     43e:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <inputNum>
				displayMessage("TOURISTS > 10yrs", 0);
     442:	60 e0       	ldi	r22, 0x00	; 0
     444:	70 e0       	ldi	r23, 0x00	; 0
     446:	8f e1       	ldi	r24, 0x1F	; 31
     448:	92 e0       	ldi	r25, 0x02	; 2
     44a:	ad de       	rcall	.-678    	; 0x1a6 <_Z14displayMessagePci>
				mode = 2;
     44c:	82 e0       	ldi	r24, 0x02	; 2
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <mode+0x1>
     454:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <mode>
     458:	b9 c0       	rjmp	.+370    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
			}
			else if(mode == 2){
     45a:	82 30       	cpi	r24, 0x02	; 2
     45c:	91 05       	cpc	r25, r1
     45e:	39 f5       	brne	.+78     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
				// record the number of tourist below 10 yrs
				touristCars[currentCapacity].touristAbove10 = inputNum;
     460:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <__data_end>
     464:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <__data_end+0x1>
     468:	fc 01       	movw	r30, r24
     46a:	ee 0f       	add	r30, r30
     46c:	ff 1f       	adc	r31, r31
     46e:	e8 0f       	add	r30, r24
     470:	f9 1f       	adc	r31, r25
     472:	ee 0f       	add	r30, r30
     474:	ff 1f       	adc	r31, r31
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	8c 0f       	add	r24, r28
     47c:	9d 1f       	adc	r25, r29
     47e:	e8 0f       	add	r30, r24
     480:	f9 1f       	adc	r31, r25
     482:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <inputNum>
     486:	90 91 c7 02 	lds	r25, 0x02C7	; 0x8002c7 <inputNum+0x1>
     48a:	93 83       	std	Z+3, r25	; 0x03
     48c:	82 83       	std	Z+2, r24	; 0x02
				inputNum = 0;
     48e:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <inputNum+0x1>
     492:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <inputNum>
				displayMessage("PLATE NO", 0);
     496:	60 e0       	ldi	r22, 0x00	; 0
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	80 e3       	ldi	r24, 0x30	; 48
     49c:	92 e0       	ldi	r25, 0x02	; 2
     49e:	83 de       	rcall	.-762    	; 0x1a6 <_Z14displayMessagePci>
				mode = 3;
     4a0:	83 e0       	ldi	r24, 0x03	; 3
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <mode+0x1>
     4a8:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <mode>
     4ac:	8f c0       	rjmp	.+286    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
			}
			else if(mode == 3){
     4ae:	83 30       	cpi	r24, 0x03	; 3
     4b0:	91 05       	cpc	r25, r1
     4b2:	f1 f4       	brne	.+60     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				// record the number of tourist below 10 yrs
				touristCars[currentCapacity].plateNo = inputNum;
				inputNum = 0;
     4b4:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <inputNum+0x1>
     4b8:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <inputNum>
				displayMessage("TOURISTS RECORDED", 0);
     4bc:	60 e0       	ldi	r22, 0x00	; 0
     4be:	70 e0       	ldi	r23, 0x00	; 0
     4c0:	89 e3       	ldi	r24, 0x39	; 57
     4c2:	92 e0       	ldi	r25, 0x02	; 2
     4c4:	70 de       	rcall	.-800    	; 0x1a6 <_Z14displayMessagePci>
     4c6:	8b e7       	ldi	r24, 0x7B	; 123
     4c8:	92 e9       	ldi	r25, 0x92	; 146
     4ca:	01 97       	sbiw	r24, 0x01	; 1
     4cc:	f1 f7       	brne	.-4      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
     4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
				_delay_ms(150);
				
				openAndCloseGate();
     4d0:	00 00       	nop
     4d2:	ae de       	rcall	.-676    	; 0x230 <_Z16openAndCloseGatev>
				
				mode = 0;
     4d4:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <mode+0x1>
     4d8:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <mode>
				currentCapacity += 1;
     4dc:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <__data_end>
     4e0:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <__data_end+0x1>
     4e4:	01 96       	adiw	r24, 0x01	; 1
     4e6:	90 93 c3 02 	sts	0x02C3, r25	; 0x8002c3 <__data_end+0x1>
     4ea:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <__data_end>
     4ee:	6e c0       	rjmp	.+220    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
				inputNum = 0; // reset
			}
			else if (mode == 4)
     4f0:	84 30       	cpi	r24, 0x04	; 4
     4f2:	91 05       	cpc	r25, r1
     4f4:	59 f5       	brne	.+86     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
			{
				if (inputNum == attendantPin)
     4f6:	20 91 c6 02 	lds	r18, 0x02C6	; 0x8002c6 <inputNum>
     4fa:	30 91 c7 02 	lds	r19, 0x02C7	; 0x8002c7 <inputNum+0x1>
     4fe:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     502:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     506:	28 17       	cp	r18, r24
     508:	39 07       	cpc	r19, r25
				{
					displayMessage("LOGIN SUCCESS", 0);
     50a:	d1 f4       	brne	.+52     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     50c:	60 e0       	ldi	r22, 0x00	; 0
     50e:	70 e0       	ldi	r23, 0x00	; 0
     510:	8b e4       	ldi	r24, 0x4B	; 75
     512:	92 e0       	ldi	r25, 0x02	; 2
     514:	48 de       	rcall	.-880    	; 0x1a6 <_Z14displayMessagePci>
     516:	9f e5       	ldi	r25, 0x5F	; 95
     518:	2a ee       	ldi	r18, 0xEA	; 234
     51a:	40 e0       	ldi	r20, 0x00	; 0
     51c:	91 50       	subi	r25, 0x01	; 1
     51e:	20 40       	sbci	r18, 0x00	; 0
     520:	40 40       	sbci	r20, 0x00	; 0
     522:	e1 f7       	brne	.-8      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     524:	00 c0       	rjmp	.+0      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
					_delay_ms(300);
					
					displayMessage("1->ALL CARS,2->TOURISTS", 0);
     526:	00 00       	nop
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	89 e5       	ldi	r24, 0x59	; 89
     52e:	92 e0       	ldi	r25, 0x02	; 2
     530:	3a de       	rcall	.-908    	; 0x1a6 <_Z14displayMessagePci>
					mode = 5;
     532:	85 e0       	ldi	r24, 0x05	; 5
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <mode+0x1>
     53a:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <mode>
				}
				else{
					displayMessage("LOGIN FAILED", 0);
     53e:	46 c0       	rjmp	.+140    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	81 e7       	ldi	r24, 0x71	; 113
     546:	92 e0       	ldi	r25, 0x02	; 2
     548:	2e de       	rcall	.-932    	; 0x1a6 <_Z14displayMessagePci>
     54a:	40 c0       	rjmp	.+128    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
					
					inputNum = 0;
			}
			inputNum = 0; // reset
			}
			else if (mode == 5)
     54c:	05 97       	sbiw	r24, 0x05	; 5
     54e:	09 f0       	breq	.+2      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
			{
				if (inputNum == 1)
     550:	3d c0       	rjmp	.+122    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     552:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <inputNum>
     556:	90 91 c7 02 	lds	r25, 0x02C7	; 0x8002c7 <inputNum+0x1>
     55a:	81 30       	cpi	r24, 0x01	; 1
				{
					//all cars
					displayNum(currentCapacity);
     55c:	91 05       	cpc	r25, r1
     55e:	59 f4       	brne	.+22     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
     560:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <__data_end>
     564:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <__data_end+0x1>
					displayMessage("1->ALL CARS,2->TOURISTS", 0);
     568:	85 de       	rcall	.-758    	; 0x274 <_Z10displayNumi>
     56a:	60 e0       	ldi	r22, 0x00	; 0
     56c:	70 e0       	ldi	r23, 0x00	; 0
     56e:	89 e5       	ldi	r24, 0x59	; 89
     570:	92 e0       	ldi	r25, 0x02	; 2
     572:	19 de       	rcall	.-974    	; 0x1a6 <_Z14displayMessagePci>
     574:	2b c0       	rjmp	.+86     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
					
				}
				else if (inputNum == 2)
     576:	02 97       	sbiw	r24, 0x02	; 2
     578:	49 f5       	brne	.+82     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	90 e0       	ldi	r25, 0x00	; 0
				{
					// all tourists
					int sum = 0;
					for (int i = 0; i < currentCapacity; i ++)
     582:	40 91 c2 02 	lds	r20, 0x02C2	; 0x8002c2 <__data_end>
     586:	50 91 c3 02 	lds	r21, 0x02C3	; 0x8002c3 <__data_end+0x1>
     58a:	24 17       	cp	r18, r20
     58c:	35 07       	cpc	r19, r21
     58e:	c4 f4       	brge	.+48     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
					{
						sum += (touristCars[i].touristAbove10 + touristCars[1].touristBelow10);
     590:	f9 01       	movw	r30, r18
     592:	ee 0f       	add	r30, r30
     594:	ff 1f       	adc	r31, r31
     596:	e2 0f       	add	r30, r18
     598:	f3 1f       	adc	r31, r19
     59a:	ee 0f       	add	r30, r30
     59c:	ff 1f       	adc	r31, r31
     59e:	41 e0       	ldi	r20, 0x01	; 1
     5a0:	50 e0       	ldi	r21, 0x00	; 0
     5a2:	4c 0f       	add	r20, r28
     5a4:	5d 1f       	adc	r21, r29
     5a6:	e4 0f       	add	r30, r20
     5a8:	f5 1f       	adc	r31, r21
     5aa:	62 81       	ldd	r22, Z+2	; 0x02
     5ac:	73 81       	ldd	r23, Z+3	; 0x03
     5ae:	4f 81       	ldd	r20, Y+7	; 0x07
     5b0:	58 85       	ldd	r21, Y+8	; 0x08
     5b2:	46 0f       	add	r20, r22
     5b4:	57 1f       	adc	r21, r23
				}
				else if (inputNum == 2)
				{
					// all tourists
					int sum = 0;
					for (int i = 0; i < currentCapacity; i ++)
     5b6:	84 0f       	add	r24, r20
     5b8:	95 1f       	adc	r25, r21
     5ba:	2f 5f       	subi	r18, 0xFF	; 255
					{
						sum += (touristCars[i].touristAbove10 + touristCars[1].touristBelow10);
					}
					
					displayNum(sum);
     5bc:	3f 4f       	sbci	r19, 0xFF	; 255
     5be:	e1 cf       	rjmp	.-62     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
					displayMessage("1->ALL CARS,2->TOURISTS", 0);
     5c0:	59 de       	rcall	.-846    	; 0x274 <_Z10displayNumi>
     5c2:	60 e0       	ldi	r22, 0x00	; 0
     5c4:	70 e0       	ldi	r23, 0x00	; 0
     5c6:	89 e5       	ldi	r24, 0x59	; 89
     5c8:	92 e0       	ldi	r25, 0x02	; 2
     5ca:	ed dd       	rcall	.-1062   	; 0x1a6 <_Z14displayMessagePci>
					
				}
			}
			inputNum = 0; // reset
     5cc:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <inputNum+0x1>
     5d0:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <inputNum>
		}
		
		PORTK = 0b11111101;
     5d4:	8d ef       	ldi	r24, 0xFD	; 253
     5d6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
		
		if ((PINK & 0b00001000) == 0)
     5da:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     5de:	83 fd       	sbrc	r24, 3
     5e0:	09 c0       	rjmp	.+18     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
     5e2:	8b e7       	ldi	r24, 0x7B	; 123
     5e4:	92 e9       	ldi	r25, 0x92	; 146
     5e6:	01 97       	sbiw	r24, 0x01	; 1
     5e8:	f1 f7       	brne	.-4      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
		{ //3
			_delay_ms(150);  // to avoid the bouncing contact point error
			recordAndDisplay(2);
     5ea:	00 c0       	rjmp	.+0      	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
     5ec:	00 00       	nop
     5ee:	82 e0       	ldi	r24, 0x02	; 2
     5f0:	90 e0       	ldi	r25, 0x00	; 0
		}
		
		if ((PINK & 0b00010000) == 0)
     5f2:	92 de       	rcall	.-732    	; 0x318 <_Z16recordAndDisplayi>
     5f4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     5f8:	84 fd       	sbrc	r24, 4
     5fa:	09 c0       	rjmp	.+18     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
     5fc:	8b e7       	ldi	r24, 0x7B	; 123
     5fe:	92 e9       	ldi	r25, 0x92	; 146
     600:	01 97       	sbiw	r24, 0x01	; 1
     602:	f1 f7       	brne	.-4      	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
		{ //5
			_delay_ms(150);  // to avoid the bouncing contact point error
			recordAndDisplay(5);
     604:	00 c0       	rjmp	.+0      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
     606:	00 00       	nop
     608:	85 e0       	ldi	r24, 0x05	; 5
     60a:	90 e0       	ldi	r25, 0x00	; 0
		}
		
		if ((PINK & 0b00100000) == 0)
     60c:	85 de       	rcall	.-758    	; 0x318 <_Z16recordAndDisplayi>
     60e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     612:	85 fd       	sbrc	r24, 5
     614:	09 c0       	rjmp	.+18     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
     616:	8b e7       	ldi	r24, 0x7B	; 123
     618:	92 e9       	ldi	r25, 0x92	; 146
     61a:	01 97       	sbiw	r24, 0x01	; 1
     61c:	f1 f7       	brne	.-4      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
		{ //8
			_delay_ms(150);  // to avoid the bouncing contact point error
			recordAndDisplay(8);
     61e:	00 c0       	rjmp	.+0      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
     620:	00 00       	nop
     622:	88 e0       	ldi	r24, 0x08	; 8
     624:	90 e0       	ldi	r25, 0x00	; 0
		}
		
		if ((PINK & 0b01000000) == 0)
     626:	78 de       	rcall	.-784    	; 0x318 <_Z16recordAndDisplayi>
     628:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     62c:	86 fd       	sbrc	r24, 6
     62e:	09 c0       	rjmp	.+18     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
     630:	8b e7       	ldi	r24, 0x7B	; 123
     632:	92 e9       	ldi	r25, 0x92	; 146
     634:	01 97       	sbiw	r24, 0x01	; 1
     636:	f1 f7       	brne	.-4      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
		{ //0
			_delay_ms(150);  // to avoid the bouncing contact point error
			recordAndDisplay(0);
     638:	00 c0       	rjmp	.+0      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
     63a:	00 00       	nop
     63c:	80 e0       	ldi	r24, 0x00	; 0
     63e:	90 e0       	ldi	r25, 0x00	; 0
			
		}
		
		PORTK = 0b11111110;
     640:	6b de       	rcall	.-810    	; 0x318 <_Z16recordAndDisplayi>
     642:	8e ef       	ldi	r24, 0xFE	; 254
     644:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__TEXT_REGION_LENGTH__+0x7c0108>
		
		if ((PINK & 0b00001000) == 0)
     648:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     64c:	83 fd       	sbrc	r24, 3
     64e:	09 c0       	rjmp	.+18     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
     650:	8b e7       	ldi	r24, 0x7B	; 123
     652:	92 e9       	ldi	r25, 0x92	; 146
     654:	01 97       	sbiw	r24, 0x01	; 1
     656:	f1 f7       	brne	.-4      	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
		{ //3
			_delay_ms(150);  // to avoid the bouncing contact point error
			recordAndDisplay(3);
     658:	00 c0       	rjmp	.+0      	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
     65a:	00 00       	nop
     65c:	83 e0       	ldi	r24, 0x03	; 3
     65e:	90 e0       	ldi	r25, 0x00	; 0
		}
		
		if ((PINK & 0b00010000) == 0)
     660:	5b de       	rcall	.-842    	; 0x318 <_Z16recordAndDisplayi>
     662:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     666:	84 fd       	sbrc	r24, 4
     668:	09 c0       	rjmp	.+18     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
     66a:	8b e7       	ldi	r24, 0x7B	; 123
     66c:	92 e9       	ldi	r25, 0x92	; 146
     66e:	01 97       	sbiw	r24, 0x01	; 1
     670:	f1 f7       	brne	.-4      	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
		{ //5
			_delay_ms(150); // to avoid the bouncing contact point error
			recordAndDisplay(6);
     672:	00 c0       	rjmp	.+0      	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
     674:	00 00       	nop
     676:	86 e0       	ldi	r24, 0x06	; 6
     678:	90 e0       	ldi	r25, 0x00	; 0
		}
		
		if ((PINK & 0b00100000) == 0)
     67a:	4e de       	rcall	.-868    	; 0x318 <_Z16recordAndDisplayi>
     67c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     680:	85 fd       	sbrc	r24, 5
     682:	09 c0       	rjmp	.+18     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
     684:	8b e7       	ldi	r24, 0x7B	; 123
     686:	92 e9       	ldi	r25, 0x92	; 146
     688:	01 97       	sbiw	r24, 0x01	; 1
     68a:	f1 f7       	brne	.-4      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
		{ //8
			_delay_ms(150);
			recordAndDisplay(9);
     68c:	00 c0       	rjmp	.+0      	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
     68e:	00 00       	nop
     690:	89 e0       	ldi	r24, 0x09	; 9
     692:	90 e0       	ldi	r25, 0x00	; 0
		}
		
		if ((PINK & 0b01000000) == 0)
     694:	41 de       	rcall	.-894    	; 0x318 <_Z16recordAndDisplayi>
     696:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
     69a:	86 fd       	sbrc	r24, 6
     69c:	7c ce       	rjmp	.-776    	; 0x396 <main+0x50>
     69e:	8b e7       	ldi	r24, 0x7B	; 123
     6a0:	92 e9       	ldi	r25, 0x92	; 146
     6a2:	01 97       	sbiw	r24, 0x01	; 1
     6a4:	f1 f7       	brne	.-4      	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
		{ //0
			_delay_ms(150);  // to avoid the bouncing contact point error
			displayMessage("ATTENDANT MODE", 0);
     6a6:	00 c0       	rjmp	.+0      	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
     6a8:	00 00       	nop
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	8e e7       	ldi	r24, 0x7E	; 126
     6b0:	92 e0       	ldi	r25, 0x02	; 2
     6b2:	79 dd       	rcall	.-1294   	; 0x1a6 <_Z14displayMessagePci>
     6b4:	9f e5       	ldi	r25, 0x5F	; 95
     6b6:	2a ee       	ldi	r18, 0xEA	; 234
     6b8:	40 e0       	ldi	r20, 0x00	; 0
     6ba:	91 50       	subi	r25, 0x01	; 1
     6bc:	20 40       	sbci	r18, 0x00	; 0
     6be:	40 40       	sbci	r20, 0x00	; 0
     6c0:	e1 f7       	brne	.-8      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
     6c2:	00 c0       	rjmp	.+0      	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
			_delay_ms(300);
			
			displayMessage("ENTER PIN", 0);
     6c4:	00 00       	nop
     6c6:	60 e0       	ldi	r22, 0x00	; 0
     6c8:	70 e0       	ldi	r23, 0x00	; 0
     6ca:	8d e8       	ldi	r24, 0x8D	; 141
     6cc:	92 e0       	ldi	r25, 0x02	; 2
     6ce:	6b dd       	rcall	.-1322   	; 0x1a6 <_Z14displayMessagePci>
			mode = 4;
     6d0:	84 e0       	ldi	r24, 0x04	; 4
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <mode+0x1>
     6d8:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <mode>
     6dc:	5c ce       	rjmp	.-840    	; 0x396 <main+0x50>

000006de <__vector_1>:
		
    }
}


ISR(INT0_vect){
     6de:	1f 92       	push	r1
     6e0:	0f 92       	push	r0
     6e2:	0f b6       	in	r0, 0x3f	; 63
     6e4:	0f 92       	push	r0
     6e6:	11 24       	eor	r1, r1
     6e8:	0b b6       	in	r0, 0x3b	; 59
     6ea:	0f 92       	push	r0
     6ec:	2f 93       	push	r18
     6ee:	3f 93       	push	r19
     6f0:	4f 93       	push	r20
     6f2:	5f 93       	push	r21
     6f4:	6f 93       	push	r22
     6f6:	7f 93       	push	r23
     6f8:	8f 93       	push	r24
     6fa:	9f 93       	push	r25
     6fc:	af 93       	push	r26
     6fe:	bf 93       	push	r27
     700:	cf 93       	push	r28
     702:	df 93       	push	r29
     704:	ef 93       	push	r30
     706:	ff 93       	push	r31
	PORTJ = 0xff;
     708:	c5 e0       	ldi	r28, 0x05	; 5
     70a:	d1 e0       	ldi	r29, 0x01	; 1
     70c:	8f ef       	ldi	r24, 0xFF	; 255
     70e:	88 83       	st	Y, r24
	displayMessage("Car at Gate", 0);
     710:	60 e0       	ldi	r22, 0x00	; 0
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	87 e9       	ldi	r24, 0x97	; 151
     716:	92 e0       	ldi	r25, 0x02	; 2
     718:	46 dd       	rcall	.-1396   	; 0x1a6 <_Z14displayMessagePci>
     71a:	2f e7       	ldi	r18, 0x7F	; 127
     71c:	8a e1       	ldi	r24, 0x1A	; 26
     71e:	96 e0       	ldi	r25, 0x06	; 6
     720:	21 50       	subi	r18, 0x01	; 1
     722:	80 40       	sbci	r24, 0x00	; 0
     724:	90 40       	sbci	r25, 0x00	; 0
     726:	e1 f7       	brne	.-8      	; 0x720 <__vector_1+0x42>
     728:	00 c0       	rjmp	.+0      	; 0x72a <__vector_1+0x4c>
     72a:	00 00       	nop
	
	_delay_ms(2000);
	
	PORTJ = 0x00;
     72c:	18 82       	st	Y, r1
	
	displayMessage("register mode", 2);
     72e:	62 e0       	ldi	r22, 0x02	; 2
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	83 ea       	ldi	r24, 0xA3	; 163
     734:	92 e0       	ldi	r25, 0x02	; 2
     736:	37 dd       	rcall	.-1426   	; 0x1a6 <_Z14displayMessagePci>
	
	
	mode = 1;
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <mode+0x1>
     740:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <mode>
     744:	2f e7       	ldi	r18, 0x7F	; 127
     746:	8a e1       	ldi	r24, 0x1A	; 26
     748:	96 e0       	ldi	r25, 0x06	; 6
     74a:	21 50       	subi	r18, 0x01	; 1
     74c:	80 40       	sbci	r24, 0x00	; 0
     74e:	90 40       	sbci	r25, 0x00	; 0
     750:	e1 f7       	brne	.-8      	; 0x74a <__vector_1+0x6c>
     752:	00 c0       	rjmp	.+0      	; 0x754 <__vector_1+0x76>
     754:	00 00       	nop
	
	
	_delay_ms(2000);
	
	displayMessage("TOURISTS <10yrs", 0);
     756:	60 e0       	ldi	r22, 0x00	; 0
     758:	70 e0       	ldi	r23, 0x00	; 0
     75a:	81 eb       	ldi	r24, 0xB1	; 177
     75c:	92 e0       	ldi	r25, 0x02	; 2
     75e:	23 dd       	rcall	.-1466   	; 0x1a6 <_Z14displayMessagePci>
	inputNum = 0;
     760:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <inputNum+0x1>
     764:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <inputNum>
}
     768:	ff 91       	pop	r31
     76a:	ef 91       	pop	r30
     76c:	df 91       	pop	r29
     76e:	cf 91       	pop	r28
     770:	bf 91       	pop	r27
     772:	af 91       	pop	r26
     774:	9f 91       	pop	r25
     776:	8f 91       	pop	r24
     778:	7f 91       	pop	r23
     77a:	6f 91       	pop	r22
     77c:	5f 91       	pop	r21
     77e:	4f 91       	pop	r20
     780:	3f 91       	pop	r19
     782:	2f 91       	pop	r18
     784:	0f 90       	pop	r0
     786:	0b be       	out	0x3b, r0	; 59
     788:	0f 90       	pop	r0
     78a:	0f be       	out	0x3f, r0	; 63
     78c:	0f 90       	pop	r0
     78e:	1f 90       	pop	r1
     790:	18 95       	reti

00000792 <__subsf3>:
     792:	50 58       	subi	r21, 0x80	; 128

00000794 <__addsf3>:
     794:	bb 27       	eor	r27, r27
     796:	aa 27       	eor	r26, r26
     798:	0e d0       	rcall	.+28     	; 0x7b6 <__addsf3x>
     79a:	21 c1       	rjmp	.+578    	; 0x9de <__fp_round>
     79c:	12 d1       	rcall	.+548    	; 0x9c2 <__fp_pscA>
     79e:	30 f0       	brcs	.+12     	; 0x7ac <__addsf3+0x18>
     7a0:	17 d1       	rcall	.+558    	; 0x9d0 <__fp_pscB>
     7a2:	20 f0       	brcs	.+8      	; 0x7ac <__addsf3+0x18>
     7a4:	31 f4       	brne	.+12     	; 0x7b2 <__addsf3+0x1e>
     7a6:	9f 3f       	cpi	r25, 0xFF	; 255
     7a8:	11 f4       	brne	.+4      	; 0x7ae <__addsf3+0x1a>
     7aa:	1e f4       	brtc	.+6      	; 0x7b2 <__addsf3+0x1e>
     7ac:	07 c1       	rjmp	.+526    	; 0x9bc <__fp_nan>
     7ae:	0e f4       	brtc	.+2      	; 0x7b2 <__addsf3+0x1e>
     7b0:	e0 95       	com	r30
     7b2:	e7 fb       	bst	r30, 7
     7b4:	d4 c0       	rjmp	.+424    	; 0x95e <__fp_inf>

000007b6 <__addsf3x>:
     7b6:	e9 2f       	mov	r30, r25
     7b8:	23 d1       	rcall	.+582    	; 0xa00 <__fp_split3>
     7ba:	80 f3       	brcs	.-32     	; 0x79c <__addsf3+0x8>
     7bc:	ba 17       	cp	r27, r26
     7be:	62 07       	cpc	r22, r18
     7c0:	73 07       	cpc	r23, r19
     7c2:	84 07       	cpc	r24, r20
     7c4:	95 07       	cpc	r25, r21
     7c6:	18 f0       	brcs	.+6      	; 0x7ce <__addsf3x+0x18>
     7c8:	71 f4       	brne	.+28     	; 0x7e6 <__addsf3x+0x30>
     7ca:	9e f5       	brtc	.+102    	; 0x832 <__addsf3x+0x7c>
     7cc:	52 c1       	rjmp	.+676    	; 0xa72 <__fp_zero>
     7ce:	0e f4       	brtc	.+2      	; 0x7d2 <__addsf3x+0x1c>
     7d0:	e0 95       	com	r30
     7d2:	0b 2e       	mov	r0, r27
     7d4:	ba 2f       	mov	r27, r26
     7d6:	a0 2d       	mov	r26, r0
     7d8:	0b 01       	movw	r0, r22
     7da:	b9 01       	movw	r22, r18
     7dc:	90 01       	movw	r18, r0
     7de:	0c 01       	movw	r0, r24
     7e0:	ca 01       	movw	r24, r20
     7e2:	a0 01       	movw	r20, r0
     7e4:	11 24       	eor	r1, r1
     7e6:	ff 27       	eor	r31, r31
     7e8:	59 1b       	sub	r21, r25
     7ea:	99 f0       	breq	.+38     	; 0x812 <__addsf3x+0x5c>
     7ec:	59 3f       	cpi	r21, 0xF9	; 249
     7ee:	50 f4       	brcc	.+20     	; 0x804 <__addsf3x+0x4e>
     7f0:	50 3e       	cpi	r21, 0xE0	; 224
     7f2:	68 f1       	brcs	.+90     	; 0x84e <__addsf3x+0x98>
     7f4:	1a 16       	cp	r1, r26
     7f6:	f0 40       	sbci	r31, 0x00	; 0
     7f8:	a2 2f       	mov	r26, r18
     7fa:	23 2f       	mov	r18, r19
     7fc:	34 2f       	mov	r19, r20
     7fe:	44 27       	eor	r20, r20
     800:	58 5f       	subi	r21, 0xF8	; 248
     802:	f3 cf       	rjmp	.-26     	; 0x7ea <__addsf3x+0x34>
     804:	46 95       	lsr	r20
     806:	37 95       	ror	r19
     808:	27 95       	ror	r18
     80a:	a7 95       	ror	r26
     80c:	f0 40       	sbci	r31, 0x00	; 0
     80e:	53 95       	inc	r21
     810:	c9 f7       	brne	.-14     	; 0x804 <__addsf3x+0x4e>
     812:	7e f4       	brtc	.+30     	; 0x832 <__addsf3x+0x7c>
     814:	1f 16       	cp	r1, r31
     816:	ba 0b       	sbc	r27, r26
     818:	62 0b       	sbc	r22, r18
     81a:	73 0b       	sbc	r23, r19
     81c:	84 0b       	sbc	r24, r20
     81e:	ba f0       	brmi	.+46     	; 0x84e <__addsf3x+0x98>
     820:	91 50       	subi	r25, 0x01	; 1
     822:	a1 f0       	breq	.+40     	; 0x84c <__addsf3x+0x96>
     824:	ff 0f       	add	r31, r31
     826:	bb 1f       	adc	r27, r27
     828:	66 1f       	adc	r22, r22
     82a:	77 1f       	adc	r23, r23
     82c:	88 1f       	adc	r24, r24
     82e:	c2 f7       	brpl	.-16     	; 0x820 <__addsf3x+0x6a>
     830:	0e c0       	rjmp	.+28     	; 0x84e <__addsf3x+0x98>
     832:	ba 0f       	add	r27, r26
     834:	62 1f       	adc	r22, r18
     836:	73 1f       	adc	r23, r19
     838:	84 1f       	adc	r24, r20
     83a:	48 f4       	brcc	.+18     	; 0x84e <__addsf3x+0x98>
     83c:	87 95       	ror	r24
     83e:	77 95       	ror	r23
     840:	67 95       	ror	r22
     842:	b7 95       	ror	r27
     844:	f7 95       	ror	r31
     846:	9e 3f       	cpi	r25, 0xFE	; 254
     848:	08 f0       	brcs	.+2      	; 0x84c <__addsf3x+0x96>
     84a:	b3 cf       	rjmp	.-154    	; 0x7b2 <__addsf3+0x1e>
     84c:	93 95       	inc	r25
     84e:	88 0f       	add	r24, r24
     850:	08 f0       	brcs	.+2      	; 0x854 <__addsf3x+0x9e>
     852:	99 27       	eor	r25, r25
     854:	ee 0f       	add	r30, r30
     856:	97 95       	ror	r25
     858:	87 95       	ror	r24
     85a:	08 95       	ret

0000085c <ceil>:
     85c:	f3 d0       	rcall	.+486    	; 0xa44 <__fp_trunc>
     85e:	80 f0       	brcs	.+32     	; 0x880 <ceil+0x24>
     860:	9f 37       	cpi	r25, 0x7F	; 127
     862:	40 f4       	brcc	.+16     	; 0x874 <ceil+0x18>
     864:	91 11       	cpse	r25, r1
     866:	0e f4       	brtc	.+2      	; 0x86a <ceil+0xe>
     868:	05 c1       	rjmp	.+522    	; 0xa74 <__fp_szero>
     86a:	60 e0       	ldi	r22, 0x00	; 0
     86c:	70 e0       	ldi	r23, 0x00	; 0
     86e:	80 e8       	ldi	r24, 0x80	; 128
     870:	9f e3       	ldi	r25, 0x3F	; 63
     872:	08 95       	ret
     874:	26 f0       	brts	.+8      	; 0x87e <ceil+0x22>
     876:	1b 16       	cp	r1, r27
     878:	61 1d       	adc	r22, r1
     87a:	71 1d       	adc	r23, r1
     87c:	81 1d       	adc	r24, r1
     87e:	75 c0       	rjmp	.+234    	; 0x96a <__fp_mintl>
     880:	8f c0       	rjmp	.+286    	; 0x9a0 <__fp_mpack>

00000882 <__fixsfsi>:
     882:	04 d0       	rcall	.+8      	; 0x88c <__fixunssfsi>
     884:	68 94       	set
     886:	b1 11       	cpse	r27, r1
     888:	f5 c0       	rjmp	.+490    	; 0xa74 <__fp_szero>
     88a:	08 95       	ret

0000088c <__fixunssfsi>:
     88c:	c1 d0       	rcall	.+386    	; 0xa10 <__fp_splitA>
     88e:	88 f0       	brcs	.+34     	; 0x8b2 <__fixunssfsi+0x26>
     890:	9f 57       	subi	r25, 0x7F	; 127
     892:	90 f0       	brcs	.+36     	; 0x8b8 <__fixunssfsi+0x2c>
     894:	b9 2f       	mov	r27, r25
     896:	99 27       	eor	r25, r25
     898:	b7 51       	subi	r27, 0x17	; 23
     89a:	a0 f0       	brcs	.+40     	; 0x8c4 <__fixunssfsi+0x38>
     89c:	d1 f0       	breq	.+52     	; 0x8d2 <__fixunssfsi+0x46>
     89e:	66 0f       	add	r22, r22
     8a0:	77 1f       	adc	r23, r23
     8a2:	88 1f       	adc	r24, r24
     8a4:	99 1f       	adc	r25, r25
     8a6:	1a f0       	brmi	.+6      	; 0x8ae <__fixunssfsi+0x22>
     8a8:	ba 95       	dec	r27
     8aa:	c9 f7       	brne	.-14     	; 0x89e <__fixunssfsi+0x12>
     8ac:	12 c0       	rjmp	.+36     	; 0x8d2 <__fixunssfsi+0x46>
     8ae:	b1 30       	cpi	r27, 0x01	; 1
     8b0:	81 f0       	breq	.+32     	; 0x8d2 <__fixunssfsi+0x46>
     8b2:	df d0       	rcall	.+446    	; 0xa72 <__fp_zero>
     8b4:	b1 e0       	ldi	r27, 0x01	; 1
     8b6:	08 95       	ret
     8b8:	dc c0       	rjmp	.+440    	; 0xa72 <__fp_zero>
     8ba:	67 2f       	mov	r22, r23
     8bc:	78 2f       	mov	r23, r24
     8be:	88 27       	eor	r24, r24
     8c0:	b8 5f       	subi	r27, 0xF8	; 248
     8c2:	39 f0       	breq	.+14     	; 0x8d2 <__fixunssfsi+0x46>
     8c4:	b9 3f       	cpi	r27, 0xF9	; 249
     8c6:	cc f3       	brlt	.-14     	; 0x8ba <__fixunssfsi+0x2e>
     8c8:	86 95       	lsr	r24
     8ca:	77 95       	ror	r23
     8cc:	67 95       	ror	r22
     8ce:	b3 95       	inc	r27
     8d0:	d9 f7       	brne	.-10     	; 0x8c8 <__fixunssfsi+0x3c>
     8d2:	3e f4       	brtc	.+14     	; 0x8e2 <__fixunssfsi+0x56>
     8d4:	90 95       	com	r25
     8d6:	80 95       	com	r24
     8d8:	70 95       	com	r23
     8da:	61 95       	neg	r22
     8dc:	7f 4f       	sbci	r23, 0xFF	; 255
     8de:	8f 4f       	sbci	r24, 0xFF	; 255
     8e0:	9f 4f       	sbci	r25, 0xFF	; 255
     8e2:	08 95       	ret

000008e4 <__floatunsisf>:
     8e4:	e8 94       	clt
     8e6:	09 c0       	rjmp	.+18     	; 0x8fa <__floatsisf+0x12>

000008e8 <__floatsisf>:
     8e8:	97 fb       	bst	r25, 7
     8ea:	3e f4       	brtc	.+14     	; 0x8fa <__floatsisf+0x12>
     8ec:	90 95       	com	r25
     8ee:	80 95       	com	r24
     8f0:	70 95       	com	r23
     8f2:	61 95       	neg	r22
     8f4:	7f 4f       	sbci	r23, 0xFF	; 255
     8f6:	8f 4f       	sbci	r24, 0xFF	; 255
     8f8:	9f 4f       	sbci	r25, 0xFF	; 255
     8fa:	99 23       	and	r25, r25
     8fc:	a9 f0       	breq	.+42     	; 0x928 <__floatsisf+0x40>
     8fe:	f9 2f       	mov	r31, r25
     900:	96 e9       	ldi	r25, 0x96	; 150
     902:	bb 27       	eor	r27, r27
     904:	93 95       	inc	r25
     906:	f6 95       	lsr	r31
     908:	87 95       	ror	r24
     90a:	77 95       	ror	r23
     90c:	67 95       	ror	r22
     90e:	b7 95       	ror	r27
     910:	f1 11       	cpse	r31, r1
     912:	f8 cf       	rjmp	.-16     	; 0x904 <__floatsisf+0x1c>
     914:	fa f4       	brpl	.+62     	; 0x954 <__floatsisf+0x6c>
     916:	bb 0f       	add	r27, r27
     918:	11 f4       	brne	.+4      	; 0x91e <__floatsisf+0x36>
     91a:	60 ff       	sbrs	r22, 0
     91c:	1b c0       	rjmp	.+54     	; 0x954 <__floatsisf+0x6c>
     91e:	6f 5f       	subi	r22, 0xFF	; 255
     920:	7f 4f       	sbci	r23, 0xFF	; 255
     922:	8f 4f       	sbci	r24, 0xFF	; 255
     924:	9f 4f       	sbci	r25, 0xFF	; 255
     926:	16 c0       	rjmp	.+44     	; 0x954 <__floatsisf+0x6c>
     928:	88 23       	and	r24, r24
     92a:	11 f0       	breq	.+4      	; 0x930 <__floatsisf+0x48>
     92c:	96 e9       	ldi	r25, 0x96	; 150
     92e:	11 c0       	rjmp	.+34     	; 0x952 <__floatsisf+0x6a>
     930:	77 23       	and	r23, r23
     932:	21 f0       	breq	.+8      	; 0x93c <__floatsisf+0x54>
     934:	9e e8       	ldi	r25, 0x8E	; 142
     936:	87 2f       	mov	r24, r23
     938:	76 2f       	mov	r23, r22
     93a:	05 c0       	rjmp	.+10     	; 0x946 <__floatsisf+0x5e>
     93c:	66 23       	and	r22, r22
     93e:	71 f0       	breq	.+28     	; 0x95c <__floatsisf+0x74>
     940:	96 e8       	ldi	r25, 0x86	; 134
     942:	86 2f       	mov	r24, r22
     944:	70 e0       	ldi	r23, 0x00	; 0
     946:	60 e0       	ldi	r22, 0x00	; 0
     948:	2a f0       	brmi	.+10     	; 0x954 <__floatsisf+0x6c>
     94a:	9a 95       	dec	r25
     94c:	66 0f       	add	r22, r22
     94e:	77 1f       	adc	r23, r23
     950:	88 1f       	adc	r24, r24
     952:	da f7       	brpl	.-10     	; 0x94a <__floatsisf+0x62>
     954:	88 0f       	add	r24, r24
     956:	96 95       	lsr	r25
     958:	87 95       	ror	r24
     95a:	97 f9       	bld	r25, 7
     95c:	08 95       	ret

0000095e <__fp_inf>:
     95e:	97 f9       	bld	r25, 7
     960:	9f 67       	ori	r25, 0x7F	; 127
     962:	80 e8       	ldi	r24, 0x80	; 128
     964:	70 e0       	ldi	r23, 0x00	; 0
     966:	60 e0       	ldi	r22, 0x00	; 0
     968:	08 95       	ret

0000096a <__fp_mintl>:
     96a:	88 23       	and	r24, r24
     96c:	71 f4       	brne	.+28     	; 0x98a <__fp_mintl+0x20>
     96e:	77 23       	and	r23, r23
     970:	21 f0       	breq	.+8      	; 0x97a <__fp_mintl+0x10>
     972:	98 50       	subi	r25, 0x08	; 8
     974:	87 2b       	or	r24, r23
     976:	76 2f       	mov	r23, r22
     978:	07 c0       	rjmp	.+14     	; 0x988 <__fp_mintl+0x1e>
     97a:	66 23       	and	r22, r22
     97c:	11 f4       	brne	.+4      	; 0x982 <__fp_mintl+0x18>
     97e:	99 27       	eor	r25, r25
     980:	0d c0       	rjmp	.+26     	; 0x99c <__fp_mintl+0x32>
     982:	90 51       	subi	r25, 0x10	; 16
     984:	86 2b       	or	r24, r22
     986:	70 e0       	ldi	r23, 0x00	; 0
     988:	60 e0       	ldi	r22, 0x00	; 0
     98a:	2a f0       	brmi	.+10     	; 0x996 <__fp_mintl+0x2c>
     98c:	9a 95       	dec	r25
     98e:	66 0f       	add	r22, r22
     990:	77 1f       	adc	r23, r23
     992:	88 1f       	adc	r24, r24
     994:	da f7       	brpl	.-10     	; 0x98c <__fp_mintl+0x22>
     996:	88 0f       	add	r24, r24
     998:	96 95       	lsr	r25
     99a:	87 95       	ror	r24
     99c:	97 f9       	bld	r25, 7
     99e:	08 95       	ret

000009a0 <__fp_mpack>:
     9a0:	9f 3f       	cpi	r25, 0xFF	; 255
     9a2:	31 f0       	breq	.+12     	; 0x9b0 <__fp_mpack_finite+0xc>

000009a4 <__fp_mpack_finite>:
     9a4:	91 50       	subi	r25, 0x01	; 1
     9a6:	20 f4       	brcc	.+8      	; 0x9b0 <__fp_mpack_finite+0xc>
     9a8:	87 95       	ror	r24
     9aa:	77 95       	ror	r23
     9ac:	67 95       	ror	r22
     9ae:	b7 95       	ror	r27
     9b0:	88 0f       	add	r24, r24
     9b2:	91 1d       	adc	r25, r1
     9b4:	96 95       	lsr	r25
     9b6:	87 95       	ror	r24
     9b8:	97 f9       	bld	r25, 7
     9ba:	08 95       	ret

000009bc <__fp_nan>:
     9bc:	9f ef       	ldi	r25, 0xFF	; 255
     9be:	80 ec       	ldi	r24, 0xC0	; 192
     9c0:	08 95       	ret

000009c2 <__fp_pscA>:
     9c2:	00 24       	eor	r0, r0
     9c4:	0a 94       	dec	r0
     9c6:	16 16       	cp	r1, r22
     9c8:	17 06       	cpc	r1, r23
     9ca:	18 06       	cpc	r1, r24
     9cc:	09 06       	cpc	r0, r25
     9ce:	08 95       	ret

000009d0 <__fp_pscB>:
     9d0:	00 24       	eor	r0, r0
     9d2:	0a 94       	dec	r0
     9d4:	12 16       	cp	r1, r18
     9d6:	13 06       	cpc	r1, r19
     9d8:	14 06       	cpc	r1, r20
     9da:	05 06       	cpc	r0, r21
     9dc:	08 95       	ret

000009de <__fp_round>:
     9de:	09 2e       	mov	r0, r25
     9e0:	03 94       	inc	r0
     9e2:	00 0c       	add	r0, r0
     9e4:	11 f4       	brne	.+4      	; 0x9ea <__fp_round+0xc>
     9e6:	88 23       	and	r24, r24
     9e8:	52 f0       	brmi	.+20     	; 0x9fe <__fp_round+0x20>
     9ea:	bb 0f       	add	r27, r27
     9ec:	40 f4       	brcc	.+16     	; 0x9fe <__fp_round+0x20>
     9ee:	bf 2b       	or	r27, r31
     9f0:	11 f4       	brne	.+4      	; 0x9f6 <__fp_round+0x18>
     9f2:	60 ff       	sbrs	r22, 0
     9f4:	04 c0       	rjmp	.+8      	; 0x9fe <__fp_round+0x20>
     9f6:	6f 5f       	subi	r22, 0xFF	; 255
     9f8:	7f 4f       	sbci	r23, 0xFF	; 255
     9fa:	8f 4f       	sbci	r24, 0xFF	; 255
     9fc:	9f 4f       	sbci	r25, 0xFF	; 255
     9fe:	08 95       	ret

00000a00 <__fp_split3>:
     a00:	57 fd       	sbrc	r21, 7
     a02:	90 58       	subi	r25, 0x80	; 128
     a04:	44 0f       	add	r20, r20
     a06:	55 1f       	adc	r21, r21
     a08:	59 f0       	breq	.+22     	; 0xa20 <__fp_splitA+0x10>
     a0a:	5f 3f       	cpi	r21, 0xFF	; 255
     a0c:	71 f0       	breq	.+28     	; 0xa2a <__fp_splitA+0x1a>
     a0e:	47 95       	ror	r20

00000a10 <__fp_splitA>:
     a10:	88 0f       	add	r24, r24
     a12:	97 fb       	bst	r25, 7
     a14:	99 1f       	adc	r25, r25
     a16:	61 f0       	breq	.+24     	; 0xa30 <__fp_splitA+0x20>
     a18:	9f 3f       	cpi	r25, 0xFF	; 255
     a1a:	79 f0       	breq	.+30     	; 0xa3a <__fp_splitA+0x2a>
     a1c:	87 95       	ror	r24
     a1e:	08 95       	ret
     a20:	12 16       	cp	r1, r18
     a22:	13 06       	cpc	r1, r19
     a24:	14 06       	cpc	r1, r20
     a26:	55 1f       	adc	r21, r21
     a28:	f2 cf       	rjmp	.-28     	; 0xa0e <__fp_split3+0xe>
     a2a:	46 95       	lsr	r20
     a2c:	f1 df       	rcall	.-30     	; 0xa10 <__fp_splitA>
     a2e:	08 c0       	rjmp	.+16     	; 0xa40 <__fp_splitA+0x30>
     a30:	16 16       	cp	r1, r22
     a32:	17 06       	cpc	r1, r23
     a34:	18 06       	cpc	r1, r24
     a36:	99 1f       	adc	r25, r25
     a38:	f1 cf       	rjmp	.-30     	; 0xa1c <__fp_splitA+0xc>
     a3a:	86 95       	lsr	r24
     a3c:	71 05       	cpc	r23, r1
     a3e:	61 05       	cpc	r22, r1
     a40:	08 94       	sec
     a42:	08 95       	ret

00000a44 <__fp_trunc>:
     a44:	e5 df       	rcall	.-54     	; 0xa10 <__fp_splitA>
     a46:	a0 f0       	brcs	.+40     	; 0xa70 <__fp_trunc+0x2c>
     a48:	be e7       	ldi	r27, 0x7E	; 126
     a4a:	b9 17       	cp	r27, r25
     a4c:	88 f4       	brcc	.+34     	; 0xa70 <__fp_trunc+0x2c>
     a4e:	bb 27       	eor	r27, r27
     a50:	9f 38       	cpi	r25, 0x8F	; 143
     a52:	60 f4       	brcc	.+24     	; 0xa6c <__fp_trunc+0x28>
     a54:	16 16       	cp	r1, r22
     a56:	b1 1d       	adc	r27, r1
     a58:	67 2f       	mov	r22, r23
     a5a:	78 2f       	mov	r23, r24
     a5c:	88 27       	eor	r24, r24
     a5e:	98 5f       	subi	r25, 0xF8	; 248
     a60:	f7 cf       	rjmp	.-18     	; 0xa50 <__fp_trunc+0xc>
     a62:	86 95       	lsr	r24
     a64:	77 95       	ror	r23
     a66:	67 95       	ror	r22
     a68:	b1 1d       	adc	r27, r1
     a6a:	93 95       	inc	r25
     a6c:	96 39       	cpi	r25, 0x96	; 150
     a6e:	c8 f3       	brcs	.-14     	; 0xa62 <__fp_trunc+0x1e>
     a70:	08 95       	ret

00000a72 <__fp_zero>:
     a72:	e8 94       	clt

00000a74 <__fp_szero>:
     a74:	bb 27       	eor	r27, r27
     a76:	66 27       	eor	r22, r22
     a78:	77 27       	eor	r23, r23
     a7a:	cb 01       	movw	r24, r22
     a7c:	97 f9       	bld	r25, 7
     a7e:	08 95       	ret

00000a80 <log10>:
     a80:	0a d0       	rcall	.+20     	; 0xa96 <log>
     a82:	29 ed       	ldi	r18, 0xD9	; 217
     a84:	3b e5       	ldi	r19, 0x5B	; 91
     a86:	4e ed       	ldi	r20, 0xDE	; 222
     a88:	5e e3       	ldi	r21, 0x3E	; 62
     a8a:	45 c0       	rjmp	.+138    	; 0xb16 <__mulsf3>
     a8c:	0e f0       	brts	.+2      	; 0xa90 <log10+0x10>
     a8e:	88 cf       	rjmp	.-240    	; 0x9a0 <__fp_mpack>
     a90:	95 cf       	rjmp	.-214    	; 0x9bc <__fp_nan>
     a92:	68 94       	set
     a94:	64 cf       	rjmp	.-312    	; 0x95e <__fp_inf>

00000a96 <log>:
     a96:	bc df       	rcall	.-136    	; 0xa10 <__fp_splitA>
     a98:	c8 f3       	brcs	.-14     	; 0xa8c <log10+0xc>
     a9a:	99 23       	and	r25, r25
     a9c:	d1 f3       	breq	.-12     	; 0xa92 <log10+0x12>
     a9e:	c6 f3       	brts	.-16     	; 0xa90 <log10+0x10>
     aa0:	df 93       	push	r29
     aa2:	cf 93       	push	r28
     aa4:	1f 93       	push	r17
     aa6:	0f 93       	push	r16
     aa8:	ff 92       	push	r15
     aaa:	c9 2f       	mov	r28, r25
     aac:	dd 27       	eor	r29, r29
     aae:	88 23       	and	r24, r24
     ab0:	2a f0       	brmi	.+10     	; 0xabc <log+0x26>
     ab2:	21 97       	sbiw	r28, 0x01	; 1
     ab4:	66 0f       	add	r22, r22
     ab6:	77 1f       	adc	r23, r23
     ab8:	88 1f       	adc	r24, r24
     aba:	da f7       	brpl	.-10     	; 0xab2 <log+0x1c>
     abc:	20 e0       	ldi	r18, 0x00	; 0
     abe:	30 e0       	ldi	r19, 0x00	; 0
     ac0:	40 e8       	ldi	r20, 0x80	; 128
     ac2:	5f eb       	ldi	r21, 0xBF	; 191
     ac4:	9f e3       	ldi	r25, 0x3F	; 63
     ac6:	88 39       	cpi	r24, 0x98	; 152
     ac8:	20 f0       	brcs	.+8      	; 0xad2 <log+0x3c>
     aca:	80 3e       	cpi	r24, 0xE0	; 224
     acc:	30 f0       	brcs	.+12     	; 0xada <log+0x44>
     ace:	21 96       	adiw	r28, 0x01	; 1
     ad0:	8f 77       	andi	r24, 0x7F	; 127
     ad2:	60 de       	rcall	.-832    	; 0x794 <__addsf3>
     ad4:	e4 ee       	ldi	r30, 0xE4	; 228
     ad6:	f0 e0       	ldi	r31, 0x00	; 0
     ad8:	03 c0       	rjmp	.+6      	; 0xae0 <log+0x4a>
     ada:	5c de       	rcall	.-840    	; 0x794 <__addsf3>
     adc:	e1 e1       	ldi	r30, 0x11	; 17
     ade:	f1 e0       	ldi	r31, 0x01	; 1
     ae0:	7d d0       	rcall	.+250    	; 0xbdc <__fp_powser>
     ae2:	8b 01       	movw	r16, r22
     ae4:	be 01       	movw	r22, r28
     ae6:	ec 01       	movw	r28, r24
     ae8:	fb 2e       	mov	r15, r27
     aea:	6f 57       	subi	r22, 0x7F	; 127
     aec:	71 09       	sbc	r23, r1
     aee:	75 95       	asr	r23
     af0:	77 1f       	adc	r23, r23
     af2:	88 0b       	sbc	r24, r24
     af4:	99 0b       	sbc	r25, r25
     af6:	f8 de       	rcall	.-528    	; 0x8e8 <__floatsisf>
     af8:	28 e1       	ldi	r18, 0x18	; 24
     afa:	32 e7       	ldi	r19, 0x72	; 114
     afc:	41 e3       	ldi	r20, 0x31	; 49
     afe:	5f e3       	ldi	r21, 0x3F	; 63
     b00:	16 d0       	rcall	.+44     	; 0xb2e <__mulsf3x>
     b02:	af 2d       	mov	r26, r15
     b04:	98 01       	movw	r18, r16
     b06:	ae 01       	movw	r20, r28
     b08:	ff 90       	pop	r15
     b0a:	0f 91       	pop	r16
     b0c:	1f 91       	pop	r17
     b0e:	cf 91       	pop	r28
     b10:	df 91       	pop	r29
     b12:	51 de       	rcall	.-862    	; 0x7b6 <__addsf3x>
     b14:	64 cf       	rjmp	.-312    	; 0x9de <__fp_round>

00000b16 <__mulsf3>:
     b16:	0b d0       	rcall	.+22     	; 0xb2e <__mulsf3x>
     b18:	62 cf       	rjmp	.-316    	; 0x9de <__fp_round>
     b1a:	53 df       	rcall	.-346    	; 0x9c2 <__fp_pscA>
     b1c:	28 f0       	brcs	.+10     	; 0xb28 <__mulsf3+0x12>
     b1e:	58 df       	rcall	.-336    	; 0x9d0 <__fp_pscB>
     b20:	18 f0       	brcs	.+6      	; 0xb28 <__mulsf3+0x12>
     b22:	95 23       	and	r25, r21
     b24:	09 f0       	breq	.+2      	; 0xb28 <__mulsf3+0x12>
     b26:	1b cf       	rjmp	.-458    	; 0x95e <__fp_inf>
     b28:	49 cf       	rjmp	.-366    	; 0x9bc <__fp_nan>
     b2a:	11 24       	eor	r1, r1
     b2c:	a3 cf       	rjmp	.-186    	; 0xa74 <__fp_szero>

00000b2e <__mulsf3x>:
     b2e:	68 df       	rcall	.-304    	; 0xa00 <__fp_split3>
     b30:	a0 f3       	brcs	.-24     	; 0xb1a <__mulsf3+0x4>

00000b32 <__mulsf3_pse>:
     b32:	95 9f       	mul	r25, r21
     b34:	d1 f3       	breq	.-12     	; 0xb2a <__mulsf3+0x14>
     b36:	95 0f       	add	r25, r21
     b38:	50 e0       	ldi	r21, 0x00	; 0
     b3a:	55 1f       	adc	r21, r21
     b3c:	62 9f       	mul	r22, r18
     b3e:	f0 01       	movw	r30, r0
     b40:	72 9f       	mul	r23, r18
     b42:	bb 27       	eor	r27, r27
     b44:	f0 0d       	add	r31, r0
     b46:	b1 1d       	adc	r27, r1
     b48:	63 9f       	mul	r22, r19
     b4a:	aa 27       	eor	r26, r26
     b4c:	f0 0d       	add	r31, r0
     b4e:	b1 1d       	adc	r27, r1
     b50:	aa 1f       	adc	r26, r26
     b52:	64 9f       	mul	r22, r20
     b54:	66 27       	eor	r22, r22
     b56:	b0 0d       	add	r27, r0
     b58:	a1 1d       	adc	r26, r1
     b5a:	66 1f       	adc	r22, r22
     b5c:	82 9f       	mul	r24, r18
     b5e:	22 27       	eor	r18, r18
     b60:	b0 0d       	add	r27, r0
     b62:	a1 1d       	adc	r26, r1
     b64:	62 1f       	adc	r22, r18
     b66:	73 9f       	mul	r23, r19
     b68:	b0 0d       	add	r27, r0
     b6a:	a1 1d       	adc	r26, r1
     b6c:	62 1f       	adc	r22, r18
     b6e:	83 9f       	mul	r24, r19
     b70:	a0 0d       	add	r26, r0
     b72:	61 1d       	adc	r22, r1
     b74:	22 1f       	adc	r18, r18
     b76:	74 9f       	mul	r23, r20
     b78:	33 27       	eor	r19, r19
     b7a:	a0 0d       	add	r26, r0
     b7c:	61 1d       	adc	r22, r1
     b7e:	23 1f       	adc	r18, r19
     b80:	84 9f       	mul	r24, r20
     b82:	60 0d       	add	r22, r0
     b84:	21 1d       	adc	r18, r1
     b86:	82 2f       	mov	r24, r18
     b88:	76 2f       	mov	r23, r22
     b8a:	6a 2f       	mov	r22, r26
     b8c:	11 24       	eor	r1, r1
     b8e:	9f 57       	subi	r25, 0x7F	; 127
     b90:	50 40       	sbci	r21, 0x00	; 0
     b92:	8a f0       	brmi	.+34     	; 0xbb6 <__mulsf3_pse+0x84>
     b94:	e1 f0       	breq	.+56     	; 0xbce <__mulsf3_pse+0x9c>
     b96:	88 23       	and	r24, r24
     b98:	4a f0       	brmi	.+18     	; 0xbac <__mulsf3_pse+0x7a>
     b9a:	ee 0f       	add	r30, r30
     b9c:	ff 1f       	adc	r31, r31
     b9e:	bb 1f       	adc	r27, r27
     ba0:	66 1f       	adc	r22, r22
     ba2:	77 1f       	adc	r23, r23
     ba4:	88 1f       	adc	r24, r24
     ba6:	91 50       	subi	r25, 0x01	; 1
     ba8:	50 40       	sbci	r21, 0x00	; 0
     baa:	a9 f7       	brne	.-22     	; 0xb96 <__mulsf3_pse+0x64>
     bac:	9e 3f       	cpi	r25, 0xFE	; 254
     bae:	51 05       	cpc	r21, r1
     bb0:	70 f0       	brcs	.+28     	; 0xbce <__mulsf3_pse+0x9c>
     bb2:	d5 ce       	rjmp	.-598    	; 0x95e <__fp_inf>
     bb4:	5f cf       	rjmp	.-322    	; 0xa74 <__fp_szero>
     bb6:	5f 3f       	cpi	r21, 0xFF	; 255
     bb8:	ec f3       	brlt	.-6      	; 0xbb4 <__mulsf3_pse+0x82>
     bba:	98 3e       	cpi	r25, 0xE8	; 232
     bbc:	dc f3       	brlt	.-10     	; 0xbb4 <__mulsf3_pse+0x82>
     bbe:	86 95       	lsr	r24
     bc0:	77 95       	ror	r23
     bc2:	67 95       	ror	r22
     bc4:	b7 95       	ror	r27
     bc6:	f7 95       	ror	r31
     bc8:	e7 95       	ror	r30
     bca:	9f 5f       	subi	r25, 0xFF	; 255
     bcc:	c1 f7       	brne	.-16     	; 0xbbe <__mulsf3_pse+0x8c>
     bce:	fe 2b       	or	r31, r30
     bd0:	88 0f       	add	r24, r24
     bd2:	91 1d       	adc	r25, r1
     bd4:	96 95       	lsr	r25
     bd6:	87 95       	ror	r24
     bd8:	97 f9       	bld	r25, 7
     bda:	08 95       	ret

00000bdc <__fp_powser>:
     bdc:	df 93       	push	r29
     bde:	cf 93       	push	r28
     be0:	1f 93       	push	r17
     be2:	0f 93       	push	r16
     be4:	ff 92       	push	r15
     be6:	ef 92       	push	r14
     be8:	df 92       	push	r13
     bea:	7b 01       	movw	r14, r22
     bec:	8c 01       	movw	r16, r24
     bee:	68 94       	set
     bf0:	05 c0       	rjmp	.+10     	; 0xbfc <__fp_powser+0x20>
     bf2:	da 2e       	mov	r13, r26
     bf4:	ef 01       	movw	r28, r30
     bf6:	9b df       	rcall	.-202    	; 0xb2e <__mulsf3x>
     bf8:	fe 01       	movw	r30, r28
     bfa:	e8 94       	clt
     bfc:	a5 91       	lpm	r26, Z+
     bfe:	25 91       	lpm	r18, Z+
     c00:	35 91       	lpm	r19, Z+
     c02:	45 91       	lpm	r20, Z+
     c04:	55 91       	lpm	r21, Z+
     c06:	ae f3       	brts	.-22     	; 0xbf2 <__fp_powser+0x16>
     c08:	ef 01       	movw	r28, r30
     c0a:	d5 dd       	rcall	.-1110   	; 0x7b6 <__addsf3x>
     c0c:	fe 01       	movw	r30, r28
     c0e:	97 01       	movw	r18, r14
     c10:	a8 01       	movw	r20, r16
     c12:	da 94       	dec	r13
     c14:	79 f7       	brne	.-34     	; 0xbf4 <__fp_powser+0x18>
     c16:	df 90       	pop	r13
     c18:	ef 90       	pop	r14
     c1a:	ff 90       	pop	r15
     c1c:	0f 91       	pop	r16
     c1e:	1f 91       	pop	r17
     c20:	cf 91       	pop	r28
     c22:	df 91       	pop	r29
     c24:	08 95       	ret

00000c26 <sprintf>:
     c26:	0f 93       	push	r16
     c28:	1f 93       	push	r17
     c2a:	cf 93       	push	r28
     c2c:	df 93       	push	r29
     c2e:	cd b7       	in	r28, 0x3d	; 61
     c30:	de b7       	in	r29, 0x3e	; 62
     c32:	2e 97       	sbiw	r28, 0x0e	; 14
     c34:	0f b6       	in	r0, 0x3f	; 63
     c36:	f8 94       	cli
     c38:	de bf       	out	0x3e, r29	; 62
     c3a:	0f be       	out	0x3f, r0	; 63
     c3c:	cd bf       	out	0x3d, r28	; 61
     c3e:	0e 89       	ldd	r16, Y+22	; 0x16
     c40:	1f 89       	ldd	r17, Y+23	; 0x17
     c42:	86 e0       	ldi	r24, 0x06	; 6
     c44:	8c 83       	std	Y+4, r24	; 0x04
     c46:	1a 83       	std	Y+2, r17	; 0x02
     c48:	09 83       	std	Y+1, r16	; 0x01
     c4a:	8f ef       	ldi	r24, 0xFF	; 255
     c4c:	9f e7       	ldi	r25, 0x7F	; 127
     c4e:	9e 83       	std	Y+6, r25	; 0x06
     c50:	8d 83       	std	Y+5, r24	; 0x05
     c52:	ae 01       	movw	r20, r28
     c54:	46 5e       	subi	r20, 0xE6	; 230
     c56:	5f 4f       	sbci	r21, 0xFF	; 255
     c58:	68 8d       	ldd	r22, Y+24	; 0x18
     c5a:	79 8d       	ldd	r23, Y+25	; 0x19
     c5c:	ce 01       	movw	r24, r28
     c5e:	01 96       	adiw	r24, 0x01	; 1
     c60:	10 d0       	rcall	.+32     	; 0xc82 <vfprintf>
     c62:	ef 81       	ldd	r30, Y+7	; 0x07
     c64:	f8 85       	ldd	r31, Y+8	; 0x08
     c66:	e0 0f       	add	r30, r16
     c68:	f1 1f       	adc	r31, r17
     c6a:	10 82       	st	Z, r1
     c6c:	2e 96       	adiw	r28, 0x0e	; 14
     c6e:	0f b6       	in	r0, 0x3f	; 63
     c70:	f8 94       	cli
     c72:	de bf       	out	0x3e, r29	; 62
     c74:	0f be       	out	0x3f, r0	; 63
     c76:	cd bf       	out	0x3d, r28	; 61
     c78:	df 91       	pop	r29
     c7a:	cf 91       	pop	r28
     c7c:	1f 91       	pop	r17
     c7e:	0f 91       	pop	r16
     c80:	08 95       	ret

00000c82 <vfprintf>:
     c82:	2f 92       	push	r2
     c84:	3f 92       	push	r3
     c86:	4f 92       	push	r4
     c88:	5f 92       	push	r5
     c8a:	6f 92       	push	r6
     c8c:	7f 92       	push	r7
     c8e:	8f 92       	push	r8
     c90:	9f 92       	push	r9
     c92:	af 92       	push	r10
     c94:	bf 92       	push	r11
     c96:	cf 92       	push	r12
     c98:	df 92       	push	r13
     c9a:	ef 92       	push	r14
     c9c:	ff 92       	push	r15
     c9e:	0f 93       	push	r16
     ca0:	1f 93       	push	r17
     ca2:	cf 93       	push	r28
     ca4:	df 93       	push	r29
     ca6:	cd b7       	in	r28, 0x3d	; 61
     ca8:	de b7       	in	r29, 0x3e	; 62
     caa:	2b 97       	sbiw	r28, 0x0b	; 11
     cac:	0f b6       	in	r0, 0x3f	; 63
     cae:	f8 94       	cli
     cb0:	de bf       	out	0x3e, r29	; 62
     cb2:	0f be       	out	0x3f, r0	; 63
     cb4:	cd bf       	out	0x3d, r28	; 61
     cb6:	6c 01       	movw	r12, r24
     cb8:	7b 01       	movw	r14, r22
     cba:	8a 01       	movw	r16, r20
     cbc:	fc 01       	movw	r30, r24
     cbe:	17 82       	std	Z+7, r1	; 0x07
     cc0:	16 82       	std	Z+6, r1	; 0x06
     cc2:	83 81       	ldd	r24, Z+3	; 0x03
     cc4:	81 ff       	sbrs	r24, 1
     cc6:	bf c1       	rjmp	.+894    	; 0x1046 <__EEPROM_REGION_LENGTH__+0x46>
     cc8:	ce 01       	movw	r24, r28
     cca:	01 96       	adiw	r24, 0x01	; 1
     ccc:	3c 01       	movw	r6, r24
     cce:	f6 01       	movw	r30, r12
     cd0:	93 81       	ldd	r25, Z+3	; 0x03
     cd2:	f7 01       	movw	r30, r14
     cd4:	93 fd       	sbrc	r25, 3
     cd6:	85 91       	lpm	r24, Z+
     cd8:	93 ff       	sbrs	r25, 3
     cda:	81 91       	ld	r24, Z+
     cdc:	7f 01       	movw	r14, r30
     cde:	88 23       	and	r24, r24
     ce0:	09 f4       	brne	.+2      	; 0xce4 <vfprintf+0x62>
     ce2:	ad c1       	rjmp	.+858    	; 0x103e <__EEPROM_REGION_LENGTH__+0x3e>
     ce4:	85 32       	cpi	r24, 0x25	; 37
     ce6:	39 f4       	brne	.+14     	; 0xcf6 <vfprintf+0x74>
     ce8:	93 fd       	sbrc	r25, 3
     cea:	85 91       	lpm	r24, Z+
     cec:	93 ff       	sbrs	r25, 3
     cee:	81 91       	ld	r24, Z+
     cf0:	7f 01       	movw	r14, r30
     cf2:	85 32       	cpi	r24, 0x25	; 37
     cf4:	21 f4       	brne	.+8      	; 0xcfe <vfprintf+0x7c>
     cf6:	b6 01       	movw	r22, r12
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	d6 d1       	rcall	.+940    	; 0x10a8 <fputc>
     cfc:	e8 cf       	rjmp	.-48     	; 0xcce <vfprintf+0x4c>
     cfe:	91 2c       	mov	r9, r1
     d00:	21 2c       	mov	r2, r1
     d02:	31 2c       	mov	r3, r1
     d04:	ff e1       	ldi	r31, 0x1F	; 31
     d06:	f3 15       	cp	r31, r3
     d08:	d8 f0       	brcs	.+54     	; 0xd40 <vfprintf+0xbe>
     d0a:	8b 32       	cpi	r24, 0x2B	; 43
     d0c:	79 f0       	breq	.+30     	; 0xd2c <vfprintf+0xaa>
     d0e:	38 f4       	brcc	.+14     	; 0xd1e <vfprintf+0x9c>
     d10:	80 32       	cpi	r24, 0x20	; 32
     d12:	79 f0       	breq	.+30     	; 0xd32 <vfprintf+0xb0>
     d14:	83 32       	cpi	r24, 0x23	; 35
     d16:	a1 f4       	brne	.+40     	; 0xd40 <vfprintf+0xbe>
     d18:	23 2d       	mov	r18, r3
     d1a:	20 61       	ori	r18, 0x10	; 16
     d1c:	1d c0       	rjmp	.+58     	; 0xd58 <vfprintf+0xd6>
     d1e:	8d 32       	cpi	r24, 0x2D	; 45
     d20:	61 f0       	breq	.+24     	; 0xd3a <vfprintf+0xb8>
     d22:	80 33       	cpi	r24, 0x30	; 48
     d24:	69 f4       	brne	.+26     	; 0xd40 <vfprintf+0xbe>
     d26:	23 2d       	mov	r18, r3
     d28:	21 60       	ori	r18, 0x01	; 1
     d2a:	16 c0       	rjmp	.+44     	; 0xd58 <vfprintf+0xd6>
     d2c:	83 2d       	mov	r24, r3
     d2e:	82 60       	ori	r24, 0x02	; 2
     d30:	38 2e       	mov	r3, r24
     d32:	e3 2d       	mov	r30, r3
     d34:	e4 60       	ori	r30, 0x04	; 4
     d36:	3e 2e       	mov	r3, r30
     d38:	2a c0       	rjmp	.+84     	; 0xd8e <vfprintf+0x10c>
     d3a:	f3 2d       	mov	r31, r3
     d3c:	f8 60       	ori	r31, 0x08	; 8
     d3e:	1d c0       	rjmp	.+58     	; 0xd7a <vfprintf+0xf8>
     d40:	37 fc       	sbrc	r3, 7
     d42:	2d c0       	rjmp	.+90     	; 0xd9e <vfprintf+0x11c>
     d44:	20 ed       	ldi	r18, 0xD0	; 208
     d46:	28 0f       	add	r18, r24
     d48:	2a 30       	cpi	r18, 0x0A	; 10
     d4a:	40 f0       	brcs	.+16     	; 0xd5c <vfprintf+0xda>
     d4c:	8e 32       	cpi	r24, 0x2E	; 46
     d4e:	b9 f4       	brne	.+46     	; 0xd7e <vfprintf+0xfc>
     d50:	36 fc       	sbrc	r3, 6
     d52:	75 c1       	rjmp	.+746    	; 0x103e <__EEPROM_REGION_LENGTH__+0x3e>
     d54:	23 2d       	mov	r18, r3
     d56:	20 64       	ori	r18, 0x40	; 64
     d58:	32 2e       	mov	r3, r18
     d5a:	19 c0       	rjmp	.+50     	; 0xd8e <vfprintf+0x10c>
     d5c:	36 fe       	sbrs	r3, 6
     d5e:	06 c0       	rjmp	.+12     	; 0xd6c <vfprintf+0xea>
     d60:	8a e0       	ldi	r24, 0x0A	; 10
     d62:	98 9e       	mul	r9, r24
     d64:	20 0d       	add	r18, r0
     d66:	11 24       	eor	r1, r1
     d68:	92 2e       	mov	r9, r18
     d6a:	11 c0       	rjmp	.+34     	; 0xd8e <vfprintf+0x10c>
     d6c:	ea e0       	ldi	r30, 0x0A	; 10
     d6e:	2e 9e       	mul	r2, r30
     d70:	20 0d       	add	r18, r0
     d72:	11 24       	eor	r1, r1
     d74:	22 2e       	mov	r2, r18
     d76:	f3 2d       	mov	r31, r3
     d78:	f0 62       	ori	r31, 0x20	; 32
     d7a:	3f 2e       	mov	r3, r31
     d7c:	08 c0       	rjmp	.+16     	; 0xd8e <vfprintf+0x10c>
     d7e:	8c 36       	cpi	r24, 0x6C	; 108
     d80:	21 f4       	brne	.+8      	; 0xd8a <vfprintf+0x108>
     d82:	83 2d       	mov	r24, r3
     d84:	80 68       	ori	r24, 0x80	; 128
     d86:	38 2e       	mov	r3, r24
     d88:	02 c0       	rjmp	.+4      	; 0xd8e <vfprintf+0x10c>
     d8a:	88 36       	cpi	r24, 0x68	; 104
     d8c:	41 f4       	brne	.+16     	; 0xd9e <vfprintf+0x11c>
     d8e:	f7 01       	movw	r30, r14
     d90:	93 fd       	sbrc	r25, 3
     d92:	85 91       	lpm	r24, Z+
     d94:	93 ff       	sbrs	r25, 3
     d96:	81 91       	ld	r24, Z+
     d98:	7f 01       	movw	r14, r30
     d9a:	81 11       	cpse	r24, r1
     d9c:	b3 cf       	rjmp	.-154    	; 0xd04 <vfprintf+0x82>
     d9e:	98 2f       	mov	r25, r24
     da0:	9f 7d       	andi	r25, 0xDF	; 223
     da2:	95 54       	subi	r25, 0x45	; 69
     da4:	93 30       	cpi	r25, 0x03	; 3
     da6:	28 f4       	brcc	.+10     	; 0xdb2 <vfprintf+0x130>
     da8:	0c 5f       	subi	r16, 0xFC	; 252
     daa:	1f 4f       	sbci	r17, 0xFF	; 255
     dac:	9f e3       	ldi	r25, 0x3F	; 63
     dae:	99 83       	std	Y+1, r25	; 0x01
     db0:	0d c0       	rjmp	.+26     	; 0xdcc <vfprintf+0x14a>
     db2:	83 36       	cpi	r24, 0x63	; 99
     db4:	31 f0       	breq	.+12     	; 0xdc2 <vfprintf+0x140>
     db6:	83 37       	cpi	r24, 0x73	; 115
     db8:	71 f0       	breq	.+28     	; 0xdd6 <vfprintf+0x154>
     dba:	83 35       	cpi	r24, 0x53	; 83
     dbc:	09 f0       	breq	.+2      	; 0xdc0 <vfprintf+0x13e>
     dbe:	55 c0       	rjmp	.+170    	; 0xe6a <vfprintf+0x1e8>
     dc0:	20 c0       	rjmp	.+64     	; 0xe02 <vfprintf+0x180>
     dc2:	f8 01       	movw	r30, r16
     dc4:	80 81       	ld	r24, Z
     dc6:	89 83       	std	Y+1, r24	; 0x01
     dc8:	0e 5f       	subi	r16, 0xFE	; 254
     dca:	1f 4f       	sbci	r17, 0xFF	; 255
     dcc:	88 24       	eor	r8, r8
     dce:	83 94       	inc	r8
     dd0:	91 2c       	mov	r9, r1
     dd2:	53 01       	movw	r10, r6
     dd4:	12 c0       	rjmp	.+36     	; 0xdfa <vfprintf+0x178>
     dd6:	28 01       	movw	r4, r16
     dd8:	f2 e0       	ldi	r31, 0x02	; 2
     dda:	4f 0e       	add	r4, r31
     ddc:	51 1c       	adc	r5, r1
     dde:	f8 01       	movw	r30, r16
     de0:	a0 80       	ld	r10, Z
     de2:	b1 80       	ldd	r11, Z+1	; 0x01
     de4:	36 fe       	sbrs	r3, 6
     de6:	03 c0       	rjmp	.+6      	; 0xdee <vfprintf+0x16c>
     de8:	69 2d       	mov	r22, r9
     dea:	70 e0       	ldi	r23, 0x00	; 0
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <vfprintf+0x170>
     dee:	6f ef       	ldi	r22, 0xFF	; 255
     df0:	7f ef       	ldi	r23, 0xFF	; 255
     df2:	c5 01       	movw	r24, r10
     df4:	4e d1       	rcall	.+668    	; 0x1092 <strnlen>
     df6:	4c 01       	movw	r8, r24
     df8:	82 01       	movw	r16, r4
     dfa:	f3 2d       	mov	r31, r3
     dfc:	ff 77       	andi	r31, 0x7F	; 127
     dfe:	3f 2e       	mov	r3, r31
     e00:	15 c0       	rjmp	.+42     	; 0xe2c <vfprintf+0x1aa>
     e02:	28 01       	movw	r4, r16
     e04:	22 e0       	ldi	r18, 0x02	; 2
     e06:	42 0e       	add	r4, r18
     e08:	51 1c       	adc	r5, r1
     e0a:	f8 01       	movw	r30, r16
     e0c:	a0 80       	ld	r10, Z
     e0e:	b1 80       	ldd	r11, Z+1	; 0x01
     e10:	36 fe       	sbrs	r3, 6
     e12:	03 c0       	rjmp	.+6      	; 0xe1a <vfprintf+0x198>
     e14:	69 2d       	mov	r22, r9
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <vfprintf+0x19c>
     e1a:	6f ef       	ldi	r22, 0xFF	; 255
     e1c:	7f ef       	ldi	r23, 0xFF	; 255
     e1e:	c5 01       	movw	r24, r10
     e20:	2d d1       	rcall	.+602    	; 0x107c <strnlen_P>
     e22:	4c 01       	movw	r8, r24
     e24:	f3 2d       	mov	r31, r3
     e26:	f0 68       	ori	r31, 0x80	; 128
     e28:	3f 2e       	mov	r3, r31
     e2a:	82 01       	movw	r16, r4
     e2c:	33 fc       	sbrc	r3, 3
     e2e:	19 c0       	rjmp	.+50     	; 0xe62 <vfprintf+0x1e0>
     e30:	82 2d       	mov	r24, r2
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	88 16       	cp	r8, r24
     e36:	99 06       	cpc	r9, r25
     e38:	a0 f4       	brcc	.+40     	; 0xe62 <vfprintf+0x1e0>
     e3a:	b6 01       	movw	r22, r12
     e3c:	80 e2       	ldi	r24, 0x20	; 32
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	33 d1       	rcall	.+614    	; 0x10a8 <fputc>
     e42:	2a 94       	dec	r2
     e44:	f5 cf       	rjmp	.-22     	; 0xe30 <vfprintf+0x1ae>
     e46:	f5 01       	movw	r30, r10
     e48:	37 fc       	sbrc	r3, 7
     e4a:	85 91       	lpm	r24, Z+
     e4c:	37 fe       	sbrs	r3, 7
     e4e:	81 91       	ld	r24, Z+
     e50:	5f 01       	movw	r10, r30
     e52:	b6 01       	movw	r22, r12
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	28 d1       	rcall	.+592    	; 0x10a8 <fputc>
     e58:	21 10       	cpse	r2, r1
     e5a:	2a 94       	dec	r2
     e5c:	21 e0       	ldi	r18, 0x01	; 1
     e5e:	82 1a       	sub	r8, r18
     e60:	91 08       	sbc	r9, r1
     e62:	81 14       	cp	r8, r1
     e64:	91 04       	cpc	r9, r1
     e66:	79 f7       	brne	.-34     	; 0xe46 <vfprintf+0x1c4>
     e68:	e1 c0       	rjmp	.+450    	; 0x102c <__EEPROM_REGION_LENGTH__+0x2c>
     e6a:	84 36       	cpi	r24, 0x64	; 100
     e6c:	11 f0       	breq	.+4      	; 0xe72 <vfprintf+0x1f0>
     e6e:	89 36       	cpi	r24, 0x69	; 105
     e70:	39 f5       	brne	.+78     	; 0xec0 <vfprintf+0x23e>
     e72:	f8 01       	movw	r30, r16
     e74:	37 fe       	sbrs	r3, 7
     e76:	07 c0       	rjmp	.+14     	; 0xe86 <vfprintf+0x204>
     e78:	60 81       	ld	r22, Z
     e7a:	71 81       	ldd	r23, Z+1	; 0x01
     e7c:	82 81       	ldd	r24, Z+2	; 0x02
     e7e:	93 81       	ldd	r25, Z+3	; 0x03
     e80:	0c 5f       	subi	r16, 0xFC	; 252
     e82:	1f 4f       	sbci	r17, 0xFF	; 255
     e84:	08 c0       	rjmp	.+16     	; 0xe96 <vfprintf+0x214>
     e86:	60 81       	ld	r22, Z
     e88:	71 81       	ldd	r23, Z+1	; 0x01
     e8a:	07 2e       	mov	r0, r23
     e8c:	00 0c       	add	r0, r0
     e8e:	88 0b       	sbc	r24, r24
     e90:	99 0b       	sbc	r25, r25
     e92:	0e 5f       	subi	r16, 0xFE	; 254
     e94:	1f 4f       	sbci	r17, 0xFF	; 255
     e96:	f3 2d       	mov	r31, r3
     e98:	ff 76       	andi	r31, 0x6F	; 111
     e9a:	3f 2e       	mov	r3, r31
     e9c:	97 ff       	sbrs	r25, 7
     e9e:	09 c0       	rjmp	.+18     	; 0xeb2 <vfprintf+0x230>
     ea0:	90 95       	com	r25
     ea2:	80 95       	com	r24
     ea4:	70 95       	com	r23
     ea6:	61 95       	neg	r22
     ea8:	7f 4f       	sbci	r23, 0xFF	; 255
     eaa:	8f 4f       	sbci	r24, 0xFF	; 255
     eac:	9f 4f       	sbci	r25, 0xFF	; 255
     eae:	f0 68       	ori	r31, 0x80	; 128
     eb0:	3f 2e       	mov	r3, r31
     eb2:	2a e0       	ldi	r18, 0x0A	; 10
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	a3 01       	movw	r20, r6
     eb8:	33 d1       	rcall	.+614    	; 0x1120 <__ultoa_invert>
     eba:	88 2e       	mov	r8, r24
     ebc:	86 18       	sub	r8, r6
     ebe:	44 c0       	rjmp	.+136    	; 0xf48 <vfprintf+0x2c6>
     ec0:	85 37       	cpi	r24, 0x75	; 117
     ec2:	31 f4       	brne	.+12     	; 0xed0 <vfprintf+0x24e>
     ec4:	23 2d       	mov	r18, r3
     ec6:	2f 7e       	andi	r18, 0xEF	; 239
     ec8:	b2 2e       	mov	r11, r18
     eca:	2a e0       	ldi	r18, 0x0A	; 10
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	25 c0       	rjmp	.+74     	; 0xf1a <vfprintf+0x298>
     ed0:	93 2d       	mov	r25, r3
     ed2:	99 7f       	andi	r25, 0xF9	; 249
     ed4:	b9 2e       	mov	r11, r25
     ed6:	8f 36       	cpi	r24, 0x6F	; 111
     ed8:	c1 f0       	breq	.+48     	; 0xf0a <vfprintf+0x288>
     eda:	18 f4       	brcc	.+6      	; 0xee2 <vfprintf+0x260>
     edc:	88 35       	cpi	r24, 0x58	; 88
     ede:	79 f0       	breq	.+30     	; 0xefe <vfprintf+0x27c>
     ee0:	ae c0       	rjmp	.+348    	; 0x103e <__EEPROM_REGION_LENGTH__+0x3e>
     ee2:	80 37       	cpi	r24, 0x70	; 112
     ee4:	19 f0       	breq	.+6      	; 0xeec <vfprintf+0x26a>
     ee6:	88 37       	cpi	r24, 0x78	; 120
     ee8:	21 f0       	breq	.+8      	; 0xef2 <vfprintf+0x270>
     eea:	a9 c0       	rjmp	.+338    	; 0x103e <__EEPROM_REGION_LENGTH__+0x3e>
     eec:	e9 2f       	mov	r30, r25
     eee:	e0 61       	ori	r30, 0x10	; 16
     ef0:	be 2e       	mov	r11, r30
     ef2:	b4 fe       	sbrs	r11, 4
     ef4:	0d c0       	rjmp	.+26     	; 0xf10 <vfprintf+0x28e>
     ef6:	fb 2d       	mov	r31, r11
     ef8:	f4 60       	ori	r31, 0x04	; 4
     efa:	bf 2e       	mov	r11, r31
     efc:	09 c0       	rjmp	.+18     	; 0xf10 <vfprintf+0x28e>
     efe:	34 fe       	sbrs	r3, 4
     f00:	0a c0       	rjmp	.+20     	; 0xf16 <vfprintf+0x294>
     f02:	29 2f       	mov	r18, r25
     f04:	26 60       	ori	r18, 0x06	; 6
     f06:	b2 2e       	mov	r11, r18
     f08:	06 c0       	rjmp	.+12     	; 0xf16 <vfprintf+0x294>
     f0a:	28 e0       	ldi	r18, 0x08	; 8
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	05 c0       	rjmp	.+10     	; 0xf1a <vfprintf+0x298>
     f10:	20 e1       	ldi	r18, 0x10	; 16
     f12:	30 e0       	ldi	r19, 0x00	; 0
     f14:	02 c0       	rjmp	.+4      	; 0xf1a <vfprintf+0x298>
     f16:	20 e1       	ldi	r18, 0x10	; 16
     f18:	32 e0       	ldi	r19, 0x02	; 2
     f1a:	f8 01       	movw	r30, r16
     f1c:	b7 fe       	sbrs	r11, 7
     f1e:	07 c0       	rjmp	.+14     	; 0xf2e <vfprintf+0x2ac>
     f20:	60 81       	ld	r22, Z
     f22:	71 81       	ldd	r23, Z+1	; 0x01
     f24:	82 81       	ldd	r24, Z+2	; 0x02
     f26:	93 81       	ldd	r25, Z+3	; 0x03
     f28:	0c 5f       	subi	r16, 0xFC	; 252
     f2a:	1f 4f       	sbci	r17, 0xFF	; 255
     f2c:	06 c0       	rjmp	.+12     	; 0xf3a <vfprintf+0x2b8>
     f2e:	60 81       	ld	r22, Z
     f30:	71 81       	ldd	r23, Z+1	; 0x01
     f32:	80 e0       	ldi	r24, 0x00	; 0
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	0e 5f       	subi	r16, 0xFE	; 254
     f38:	1f 4f       	sbci	r17, 0xFF	; 255
     f3a:	a3 01       	movw	r20, r6
     f3c:	f1 d0       	rcall	.+482    	; 0x1120 <__ultoa_invert>
     f3e:	88 2e       	mov	r8, r24
     f40:	86 18       	sub	r8, r6
     f42:	fb 2d       	mov	r31, r11
     f44:	ff 77       	andi	r31, 0x7F	; 127
     f46:	3f 2e       	mov	r3, r31
     f48:	36 fe       	sbrs	r3, 6
     f4a:	0d c0       	rjmp	.+26     	; 0xf66 <vfprintf+0x2e4>
     f4c:	23 2d       	mov	r18, r3
     f4e:	2e 7f       	andi	r18, 0xFE	; 254
     f50:	a2 2e       	mov	r10, r18
     f52:	89 14       	cp	r8, r9
     f54:	58 f4       	brcc	.+22     	; 0xf6c <vfprintf+0x2ea>
     f56:	34 fe       	sbrs	r3, 4
     f58:	0b c0       	rjmp	.+22     	; 0xf70 <vfprintf+0x2ee>
     f5a:	32 fc       	sbrc	r3, 2
     f5c:	09 c0       	rjmp	.+18     	; 0xf70 <vfprintf+0x2ee>
     f5e:	83 2d       	mov	r24, r3
     f60:	8e 7e       	andi	r24, 0xEE	; 238
     f62:	a8 2e       	mov	r10, r24
     f64:	05 c0       	rjmp	.+10     	; 0xf70 <vfprintf+0x2ee>
     f66:	b8 2c       	mov	r11, r8
     f68:	a3 2c       	mov	r10, r3
     f6a:	03 c0       	rjmp	.+6      	; 0xf72 <vfprintf+0x2f0>
     f6c:	b8 2c       	mov	r11, r8
     f6e:	01 c0       	rjmp	.+2      	; 0xf72 <vfprintf+0x2f0>
     f70:	b9 2c       	mov	r11, r9
     f72:	a4 fe       	sbrs	r10, 4
     f74:	0f c0       	rjmp	.+30     	; 0xf94 <vfprintf+0x312>
     f76:	fe 01       	movw	r30, r28
     f78:	e8 0d       	add	r30, r8
     f7a:	f1 1d       	adc	r31, r1
     f7c:	80 81       	ld	r24, Z
     f7e:	80 33       	cpi	r24, 0x30	; 48
     f80:	21 f4       	brne	.+8      	; 0xf8a <vfprintf+0x308>
     f82:	9a 2d       	mov	r25, r10
     f84:	99 7e       	andi	r25, 0xE9	; 233
     f86:	a9 2e       	mov	r10, r25
     f88:	09 c0       	rjmp	.+18     	; 0xf9c <vfprintf+0x31a>
     f8a:	a2 fe       	sbrs	r10, 2
     f8c:	06 c0       	rjmp	.+12     	; 0xf9a <vfprintf+0x318>
     f8e:	b3 94       	inc	r11
     f90:	b3 94       	inc	r11
     f92:	04 c0       	rjmp	.+8      	; 0xf9c <vfprintf+0x31a>
     f94:	8a 2d       	mov	r24, r10
     f96:	86 78       	andi	r24, 0x86	; 134
     f98:	09 f0       	breq	.+2      	; 0xf9c <vfprintf+0x31a>
     f9a:	b3 94       	inc	r11
     f9c:	a3 fc       	sbrc	r10, 3
     f9e:	10 c0       	rjmp	.+32     	; 0xfc0 <vfprintf+0x33e>
     fa0:	a0 fe       	sbrs	r10, 0
     fa2:	06 c0       	rjmp	.+12     	; 0xfb0 <vfprintf+0x32e>
     fa4:	b2 14       	cp	r11, r2
     fa6:	80 f4       	brcc	.+32     	; 0xfc8 <vfprintf+0x346>
     fa8:	28 0c       	add	r2, r8
     faa:	92 2c       	mov	r9, r2
     fac:	9b 18       	sub	r9, r11
     fae:	0d c0       	rjmp	.+26     	; 0xfca <vfprintf+0x348>
     fb0:	b2 14       	cp	r11, r2
     fb2:	58 f4       	brcc	.+22     	; 0xfca <vfprintf+0x348>
     fb4:	b6 01       	movw	r22, r12
     fb6:	80 e2       	ldi	r24, 0x20	; 32
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	76 d0       	rcall	.+236    	; 0x10a8 <fputc>
     fbc:	b3 94       	inc	r11
     fbe:	f8 cf       	rjmp	.-16     	; 0xfb0 <vfprintf+0x32e>
     fc0:	b2 14       	cp	r11, r2
     fc2:	18 f4       	brcc	.+6      	; 0xfca <vfprintf+0x348>
     fc4:	2b 18       	sub	r2, r11
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <vfprintf+0x34a>
     fc8:	98 2c       	mov	r9, r8
     fca:	21 2c       	mov	r2, r1
     fcc:	a4 fe       	sbrs	r10, 4
     fce:	0f c0       	rjmp	.+30     	; 0xfee <vfprintf+0x36c>
     fd0:	b6 01       	movw	r22, r12
     fd2:	80 e3       	ldi	r24, 0x30	; 48
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	68 d0       	rcall	.+208    	; 0x10a8 <fputc>
     fd8:	a2 fe       	sbrs	r10, 2
     fda:	16 c0       	rjmp	.+44     	; 0x1008 <__EEPROM_REGION_LENGTH__+0x8>
     fdc:	a1 fc       	sbrc	r10, 1
     fde:	03 c0       	rjmp	.+6      	; 0xfe6 <vfprintf+0x364>
     fe0:	88 e7       	ldi	r24, 0x78	; 120
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	02 c0       	rjmp	.+4      	; 0xfea <vfprintf+0x368>
     fe6:	88 e5       	ldi	r24, 0x58	; 88
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	b6 01       	movw	r22, r12
     fec:	0c c0       	rjmp	.+24     	; 0x1006 <__EEPROM_REGION_LENGTH__+0x6>
     fee:	8a 2d       	mov	r24, r10
     ff0:	86 78       	andi	r24, 0x86	; 134
     ff2:	51 f0       	breq	.+20     	; 0x1008 <__EEPROM_REGION_LENGTH__+0x8>
     ff4:	a1 fe       	sbrs	r10, 1
     ff6:	02 c0       	rjmp	.+4      	; 0xffc <vfprintf+0x37a>
     ff8:	8b e2       	ldi	r24, 0x2B	; 43
     ffa:	01 c0       	rjmp	.+2      	; 0xffe <vfprintf+0x37c>
     ffc:	80 e2       	ldi	r24, 0x20	; 32
     ffe:	a7 fc       	sbrc	r10, 7
    1000:	8d e2       	ldi	r24, 0x2D	; 45
    1002:	b6 01       	movw	r22, r12
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	50 d0       	rcall	.+160    	; 0x10a8 <fputc>
    1008:	89 14       	cp	r8, r9
    100a:	30 f4       	brcc	.+12     	; 0x1018 <__EEPROM_REGION_LENGTH__+0x18>
    100c:	b6 01       	movw	r22, r12
    100e:	80 e3       	ldi	r24, 0x30	; 48
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	4a d0       	rcall	.+148    	; 0x10a8 <fputc>
    1014:	9a 94       	dec	r9
    1016:	f8 cf       	rjmp	.-16     	; 0x1008 <__EEPROM_REGION_LENGTH__+0x8>
    1018:	8a 94       	dec	r8
    101a:	f3 01       	movw	r30, r6
    101c:	e8 0d       	add	r30, r8
    101e:	f1 1d       	adc	r31, r1
    1020:	80 81       	ld	r24, Z
    1022:	b6 01       	movw	r22, r12
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	40 d0       	rcall	.+128    	; 0x10a8 <fputc>
    1028:	81 10       	cpse	r8, r1
    102a:	f6 cf       	rjmp	.-20     	; 0x1018 <__EEPROM_REGION_LENGTH__+0x18>
    102c:	22 20       	and	r2, r2
    102e:	09 f4       	brne	.+2      	; 0x1032 <__EEPROM_REGION_LENGTH__+0x32>
    1030:	4e ce       	rjmp	.-868    	; 0xcce <vfprintf+0x4c>
    1032:	b6 01       	movw	r22, r12
    1034:	80 e2       	ldi	r24, 0x20	; 32
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	37 d0       	rcall	.+110    	; 0x10a8 <fputc>
    103a:	2a 94       	dec	r2
    103c:	f7 cf       	rjmp	.-18     	; 0x102c <__EEPROM_REGION_LENGTH__+0x2c>
    103e:	f6 01       	movw	r30, r12
    1040:	86 81       	ldd	r24, Z+6	; 0x06
    1042:	97 81       	ldd	r25, Z+7	; 0x07
    1044:	02 c0       	rjmp	.+4      	; 0x104a <__EEPROM_REGION_LENGTH__+0x4a>
    1046:	8f ef       	ldi	r24, 0xFF	; 255
    1048:	9f ef       	ldi	r25, 0xFF	; 255
    104a:	2b 96       	adiw	r28, 0x0b	; 11
    104c:	0f b6       	in	r0, 0x3f	; 63
    104e:	f8 94       	cli
    1050:	de bf       	out	0x3e, r29	; 62
    1052:	0f be       	out	0x3f, r0	; 63
    1054:	cd bf       	out	0x3d, r28	; 61
    1056:	df 91       	pop	r29
    1058:	cf 91       	pop	r28
    105a:	1f 91       	pop	r17
    105c:	0f 91       	pop	r16
    105e:	ff 90       	pop	r15
    1060:	ef 90       	pop	r14
    1062:	df 90       	pop	r13
    1064:	cf 90       	pop	r12
    1066:	bf 90       	pop	r11
    1068:	af 90       	pop	r10
    106a:	9f 90       	pop	r9
    106c:	8f 90       	pop	r8
    106e:	7f 90       	pop	r7
    1070:	6f 90       	pop	r6
    1072:	5f 90       	pop	r5
    1074:	4f 90       	pop	r4
    1076:	3f 90       	pop	r3
    1078:	2f 90       	pop	r2
    107a:	08 95       	ret

0000107c <strnlen_P>:
    107c:	fc 01       	movw	r30, r24
    107e:	05 90       	lpm	r0, Z+
    1080:	61 50       	subi	r22, 0x01	; 1
    1082:	70 40       	sbci	r23, 0x00	; 0
    1084:	01 10       	cpse	r0, r1
    1086:	d8 f7       	brcc	.-10     	; 0x107e <strnlen_P+0x2>
    1088:	80 95       	com	r24
    108a:	90 95       	com	r25
    108c:	8e 0f       	add	r24, r30
    108e:	9f 1f       	adc	r25, r31
    1090:	08 95       	ret

00001092 <strnlen>:
    1092:	fc 01       	movw	r30, r24
    1094:	61 50       	subi	r22, 0x01	; 1
    1096:	70 40       	sbci	r23, 0x00	; 0
    1098:	01 90       	ld	r0, Z+
    109a:	01 10       	cpse	r0, r1
    109c:	d8 f7       	brcc	.-10     	; 0x1094 <strnlen+0x2>
    109e:	80 95       	com	r24
    10a0:	90 95       	com	r25
    10a2:	8e 0f       	add	r24, r30
    10a4:	9f 1f       	adc	r25, r31
    10a6:	08 95       	ret

000010a8 <fputc>:
    10a8:	0f 93       	push	r16
    10aa:	1f 93       	push	r17
    10ac:	cf 93       	push	r28
    10ae:	df 93       	push	r29
    10b0:	fb 01       	movw	r30, r22
    10b2:	23 81       	ldd	r18, Z+3	; 0x03
    10b4:	21 fd       	sbrc	r18, 1
    10b6:	03 c0       	rjmp	.+6      	; 0x10be <fputc+0x16>
    10b8:	8f ef       	ldi	r24, 0xFF	; 255
    10ba:	9f ef       	ldi	r25, 0xFF	; 255
    10bc:	2c c0       	rjmp	.+88     	; 0x1116 <fputc+0x6e>
    10be:	22 ff       	sbrs	r18, 2
    10c0:	16 c0       	rjmp	.+44     	; 0x10ee <fputc+0x46>
    10c2:	46 81       	ldd	r20, Z+6	; 0x06
    10c4:	57 81       	ldd	r21, Z+7	; 0x07
    10c6:	24 81       	ldd	r18, Z+4	; 0x04
    10c8:	35 81       	ldd	r19, Z+5	; 0x05
    10ca:	42 17       	cp	r20, r18
    10cc:	53 07       	cpc	r21, r19
    10ce:	44 f4       	brge	.+16     	; 0x10e0 <fputc+0x38>
    10d0:	a0 81       	ld	r26, Z
    10d2:	b1 81       	ldd	r27, Z+1	; 0x01
    10d4:	9d 01       	movw	r18, r26
    10d6:	2f 5f       	subi	r18, 0xFF	; 255
    10d8:	3f 4f       	sbci	r19, 0xFF	; 255
    10da:	31 83       	std	Z+1, r19	; 0x01
    10dc:	20 83       	st	Z, r18
    10de:	8c 93       	st	X, r24
    10e0:	26 81       	ldd	r18, Z+6	; 0x06
    10e2:	37 81       	ldd	r19, Z+7	; 0x07
    10e4:	2f 5f       	subi	r18, 0xFF	; 255
    10e6:	3f 4f       	sbci	r19, 0xFF	; 255
    10e8:	37 83       	std	Z+7, r19	; 0x07
    10ea:	26 83       	std	Z+6, r18	; 0x06
    10ec:	14 c0       	rjmp	.+40     	; 0x1116 <fputc+0x6e>
    10ee:	8b 01       	movw	r16, r22
    10f0:	ec 01       	movw	r28, r24
    10f2:	fb 01       	movw	r30, r22
    10f4:	00 84       	ldd	r0, Z+8	; 0x08
    10f6:	f1 85       	ldd	r31, Z+9	; 0x09
    10f8:	e0 2d       	mov	r30, r0
    10fa:	19 95       	eicall
    10fc:	89 2b       	or	r24, r25
    10fe:	e1 f6       	brne	.-72     	; 0x10b8 <fputc+0x10>
    1100:	d8 01       	movw	r26, r16
    1102:	16 96       	adiw	r26, 0x06	; 6
    1104:	8d 91       	ld	r24, X+
    1106:	9c 91       	ld	r25, X
    1108:	17 97       	sbiw	r26, 0x07	; 7
    110a:	01 96       	adiw	r24, 0x01	; 1
    110c:	17 96       	adiw	r26, 0x07	; 7
    110e:	9c 93       	st	X, r25
    1110:	8e 93       	st	-X, r24
    1112:	16 97       	sbiw	r26, 0x06	; 6
    1114:	ce 01       	movw	r24, r28
    1116:	df 91       	pop	r29
    1118:	cf 91       	pop	r28
    111a:	1f 91       	pop	r17
    111c:	0f 91       	pop	r16
    111e:	08 95       	ret

00001120 <__ultoa_invert>:
    1120:	fa 01       	movw	r30, r20
    1122:	aa 27       	eor	r26, r26
    1124:	28 30       	cpi	r18, 0x08	; 8
    1126:	51 f1       	breq	.+84     	; 0x117c <__ultoa_invert+0x5c>
    1128:	20 31       	cpi	r18, 0x10	; 16
    112a:	81 f1       	breq	.+96     	; 0x118c <__ultoa_invert+0x6c>
    112c:	e8 94       	clt
    112e:	6f 93       	push	r22
    1130:	6e 7f       	andi	r22, 0xFE	; 254
    1132:	6e 5f       	subi	r22, 0xFE	; 254
    1134:	7f 4f       	sbci	r23, 0xFF	; 255
    1136:	8f 4f       	sbci	r24, 0xFF	; 255
    1138:	9f 4f       	sbci	r25, 0xFF	; 255
    113a:	af 4f       	sbci	r26, 0xFF	; 255
    113c:	b1 e0       	ldi	r27, 0x01	; 1
    113e:	3e d0       	rcall	.+124    	; 0x11bc <__ultoa_invert+0x9c>
    1140:	b4 e0       	ldi	r27, 0x04	; 4
    1142:	3c d0       	rcall	.+120    	; 0x11bc <__ultoa_invert+0x9c>
    1144:	67 0f       	add	r22, r23
    1146:	78 1f       	adc	r23, r24
    1148:	89 1f       	adc	r24, r25
    114a:	9a 1f       	adc	r25, r26
    114c:	a1 1d       	adc	r26, r1
    114e:	68 0f       	add	r22, r24
    1150:	79 1f       	adc	r23, r25
    1152:	8a 1f       	adc	r24, r26
    1154:	91 1d       	adc	r25, r1
    1156:	a1 1d       	adc	r26, r1
    1158:	6a 0f       	add	r22, r26
    115a:	71 1d       	adc	r23, r1
    115c:	81 1d       	adc	r24, r1
    115e:	91 1d       	adc	r25, r1
    1160:	a1 1d       	adc	r26, r1
    1162:	20 d0       	rcall	.+64     	; 0x11a4 <__ultoa_invert+0x84>
    1164:	09 f4       	brne	.+2      	; 0x1168 <__ultoa_invert+0x48>
    1166:	68 94       	set
    1168:	3f 91       	pop	r19
    116a:	2a e0       	ldi	r18, 0x0A	; 10
    116c:	26 9f       	mul	r18, r22
    116e:	11 24       	eor	r1, r1
    1170:	30 19       	sub	r19, r0
    1172:	30 5d       	subi	r19, 0xD0	; 208
    1174:	31 93       	st	Z+, r19
    1176:	de f6       	brtc	.-74     	; 0x112e <__ultoa_invert+0xe>
    1178:	cf 01       	movw	r24, r30
    117a:	08 95       	ret
    117c:	46 2f       	mov	r20, r22
    117e:	47 70       	andi	r20, 0x07	; 7
    1180:	40 5d       	subi	r20, 0xD0	; 208
    1182:	41 93       	st	Z+, r20
    1184:	b3 e0       	ldi	r27, 0x03	; 3
    1186:	0f d0       	rcall	.+30     	; 0x11a6 <__ultoa_invert+0x86>
    1188:	c9 f7       	brne	.-14     	; 0x117c <__ultoa_invert+0x5c>
    118a:	f6 cf       	rjmp	.-20     	; 0x1178 <__ultoa_invert+0x58>
    118c:	46 2f       	mov	r20, r22
    118e:	4f 70       	andi	r20, 0x0F	; 15
    1190:	40 5d       	subi	r20, 0xD0	; 208
    1192:	4a 33       	cpi	r20, 0x3A	; 58
    1194:	18 f0       	brcs	.+6      	; 0x119c <__ultoa_invert+0x7c>
    1196:	49 5d       	subi	r20, 0xD9	; 217
    1198:	31 fd       	sbrc	r19, 1
    119a:	40 52       	subi	r20, 0x20	; 32
    119c:	41 93       	st	Z+, r20
    119e:	02 d0       	rcall	.+4      	; 0x11a4 <__ultoa_invert+0x84>
    11a0:	a9 f7       	brne	.-22     	; 0x118c <__ultoa_invert+0x6c>
    11a2:	ea cf       	rjmp	.-44     	; 0x1178 <__ultoa_invert+0x58>
    11a4:	b4 e0       	ldi	r27, 0x04	; 4
    11a6:	a6 95       	lsr	r26
    11a8:	97 95       	ror	r25
    11aa:	87 95       	ror	r24
    11ac:	77 95       	ror	r23
    11ae:	67 95       	ror	r22
    11b0:	ba 95       	dec	r27
    11b2:	c9 f7       	brne	.-14     	; 0x11a6 <__ultoa_invert+0x86>
    11b4:	00 97       	sbiw	r24, 0x00	; 0
    11b6:	61 05       	cpc	r22, r1
    11b8:	71 05       	cpc	r23, r1
    11ba:	08 95       	ret
    11bc:	9b 01       	movw	r18, r22
    11be:	ac 01       	movw	r20, r24
    11c0:	0a 2e       	mov	r0, r26
    11c2:	06 94       	lsr	r0
    11c4:	57 95       	ror	r21
    11c6:	47 95       	ror	r20
    11c8:	37 95       	ror	r19
    11ca:	27 95       	ror	r18
    11cc:	ba 95       	dec	r27
    11ce:	c9 f7       	brne	.-14     	; 0x11c2 <__ultoa_invert+0xa2>
    11d0:	62 0f       	add	r22, r18
    11d2:	73 1f       	adc	r23, r19
    11d4:	84 1f       	adc	r24, r20
    11d6:	95 1f       	adc	r25, r21
    11d8:	a0 1d       	adc	r26, r0
    11da:	08 95       	ret

000011dc <_exit>:
    11dc:	f8 94       	cli

000011de <__stop_program>:
    11de:	ff cf       	rjmp	.-2      	; 0x11de <__stop_program>
